<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>首页 on 面试笔记</title>
    <link>https://kingye.me/interview/</link>
    <description>Recent content in 首页 on 面试笔记</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://kingye.me/interview/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Linux</title>
      <link>https://kingye.me/interview/docs/os/linux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/os/linux/</guid>
      <description>&lt;h1 id=&#34;linux&#34;&gt;&#xA;  Linux&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#linux&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;blockquote class=&#34;book-hint info&#34;&gt;&#xA;  更多教程详见：&lt;a href=&#34;https://kingye.me/study-linux/&#34; target=&#34;_blank&#34;&gt;Linux 学习笔记&lt;/a&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;h2 id=&#34;硬件信息&#34;&gt;&#xA;  硬件信息&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%a1%ac%e4%bb%b6%e4%bf%a1%e6%81%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;如何查看内存大小&#34;&gt;&#xA;  如何查看内存大小？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%a6%82%e4%bd%95%e6%9f%a5%e7%9c%8b%e5%86%85%e5%ad%98%e5%a4%a7%e5%b0%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;free -m&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;如何查看-cpu-个数cpu-核心数逻辑-cpu-个数&#34;&gt;&#xA;  如何查看 CPU 个数，CPU 核心数，逻辑 CPU 个数？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%a6%82%e4%bd%95%e6%9f%a5%e7%9c%8b-cpu-%e4%b8%aa%e6%95%b0cpu-%e6%a0%b8%e5%bf%83%e6%95%b0%e9%80%bb%e8%be%91-cpu-%e4%b8%aa%e6%95%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 物理 cpu 个数&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat /proc/cpuinfo| grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;physical id&amp;#39;&lt;/span&gt; | sort | uniq | wc -l&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 每个物理 cpu 的核心数&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat /proc/cpuinfo| grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;core id&amp;#39;&lt;/span&gt; | sort | uniq | wc -l&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 系统中逻辑 cpu 总个数（线程数），多个物理 cpu 的总和&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat /proc/cpuinfo| grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;processor&amp;#39;&lt;/span&gt; | sort | uniq | wc -l&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lscpu | grep -E &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;^Thread|^Core|^Socket|^CPU\(&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#CPU(s):                               128&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#Thread(s) per core:                   2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#Core(s) per socket:                   32&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#Socket(s):                            2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;例子：&lt;/p&gt;</description>
    </item>
    <item>
      <title>C</title>
      <link>https://kingye.me/interview/docs/pl/c/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/pl/c/</guid>
      <description>&lt;h1 id=&#34;c&#34;&gt;&#xA;  C&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#c&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;blockquote class=&#34;book-hint info&#34;&gt;&#xA;  更多教程详见：&lt;a href=&#34;https://kingye.me/study-c/&#34;&gt;C 学习笔记&lt;/a&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;h2 id=&#34;基础&#34;&gt;&#xA;  基础&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9f%ba%e7%a1%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;进阶&#34;&gt;&#xA;  进阶&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%bf%9b%e9%98%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;设计与实现&#34;&gt;&#xA;  设计与实现&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%ae%be%e8%ae%a1%e4%b8%8e%e5%ae%9e%e7%8e%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Docker</title>
      <link>https://kingye.me/interview/docs/cloud/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/cloud/docker/</guid>
      <description>&lt;h1 id=&#34;docker&#34;&gt;&#xA;  Docker&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#docker&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;更多内容见：&lt;a href=&#34;https://kingye.me/interview/study-kubernetes/docs/advanced/eco/docker/&#34; target=&#34;_blank&#34;&gt;Docker 学习笔记&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;entrypoint-vs-cmd&#34;&gt;&#xA;  &lt;code&gt;entrypoint&lt;/code&gt; vs &lt;code&gt;cmd&lt;/code&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#entrypoint-vs-cmd&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;格式&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Shell form&#xA;&lt;ul&gt;&#xA;&lt;li&gt;实际运行的是 &lt;code&gt;/bin/sh -c&lt;/code&gt; 命令&#xA;&lt;ul&gt;&#xA;&lt;li&gt;有些镜像没有 shell 程序，无法使用这种方式&lt;/li&gt;&#xA;&lt;li&gt;从外部发送任何 POSIX 信号到 docker 容器，&lt;code&gt;/bin/sh&lt;/code&gt; 命令不会转发消息给实际运行的命令&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;CMD executable param1 param2&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;ENTRYPOINT executable param1 param2&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;会忽略 CMD 或者 docker run 参数&lt;/li&gt;&#xA;&lt;li&gt;无法覆盖&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Exec form&#xA;&lt;ul&gt;&#xA;&lt;li&gt;the JSON array format&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;CMD [&amp;quot;executable&amp;quot;,&amp;quot;param1&amp;quot;,&amp;quot;param2&amp;quot;]&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;如果要使用 Shell 环境变量，必须显示使用 &lt;code&gt;sh&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;如 &lt;code&gt;CMD [ &amp;quot;sh&amp;quot;, &amp;quot;-c&amp;quot;, &amp;quot;echo $HOME&amp;quot; ]&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;ENTRYPOINT [&amp;quot;executable&amp;quot;,&amp;quot;param1&amp;quot;,&amp;quot;param2&amp;quot;]&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;会把 CMD 接到后面作为参数&lt;/li&gt;&#xA;&lt;li&gt;docker run 可以覆盖：&lt;code&gt;docker run demo --entrypoint cmd&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;不管是 ENTRYPOINT 还是 CMD 命令，都强烈建议采用 exec 表示法&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;覆盖&lt;/p&gt;</description>
    </item>
    <item>
      <title>Go Web 后端</title>
      <link>https://kingye.me/interview/docs/backend/web/go/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/backend/web/go/</guid>
      <description>&lt;h1 id=&#34;go-web-后端&#34;&gt;&#xA;  Go Web 后端&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#go-web-%e5%90%8e%e7%ab%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;gin&#34;&gt;&#xA;  Gin&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#gin&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;beego&#34;&gt;&#xA;  Beego&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#beego&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;</description>
    </item>
    <item>
      <title>HTTP</title>
      <link>https://kingye.me/interview/docs/network/http/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/network/http/</guid>
      <description>&lt;h1 id=&#34;http&#34;&gt;&#xA;  HTTP&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#http&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;http-基础&#34;&gt;&#xA;  HTTP 基础&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#http-%e5%9f%ba%e7%a1%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;http-状态码有哪些&#34;&gt;&#xA;  HTTP 状态码有哪些？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#http-%e7%8a%b6%e6%80%81%e7%a0%81%e6%9c%89%e5%93%aa%e4%ba%9b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2XX 成功&#xA;&lt;ul&gt;&#xA;&lt;li&gt;200 ok（请求成功）&lt;/li&gt;&#xA;&lt;li&gt;204 no content （请求成功，但是没有结果返回）&lt;/li&gt;&#xA;&lt;li&gt;206 partial content （客户端请求一部分资源，服务端成功响应，返回一范围资源）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;3XX 重定向&#xA;&lt;ul&gt;&#xA;&lt;li&gt;301 move permanently （永久性重定向）&lt;/li&gt;&#xA;&lt;li&gt;302 found （临时性重定向）&lt;/li&gt;&#xA;&lt;li&gt;303 see other （示由于请求对应的资源存在着另一个 URI，应使用 GET 方法定向获取请求的资源）&lt;/li&gt;&#xA;&lt;li&gt;304 not modified （表示在客户端采用带条件的访问某资源时，服务端找到了资源，但是这个请求的条件不符合。跟重定向无关）&lt;/li&gt;&#xA;&lt;li&gt;307 temporary redirect （跟 302 一个意思）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;4XX 客户端错误&#xA;&lt;ul&gt;&#xA;&lt;li&gt;400 bad request （请求报文存在语法错误）&lt;/li&gt;&#xA;&lt;li&gt;401 unauthorized （需要认证（第一次返回）或者认证失败（第二次返回））&lt;/li&gt;&#xA;&lt;li&gt;403 forbidden （请求被服务器拒绝了）&lt;/li&gt;&#xA;&lt;li&gt;404 not found （服务器上无法找到请求的资源）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;5XX 服务器错误&#xA;&lt;ul&gt;&#xA;&lt;li&gt;500 internal server error （服务端执行请求时发生了错误）&lt;/li&gt;&#xA;&lt;li&gt;503 service unavailable （服务器正在超负载或者停机维护，无法处理请求）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;301-和-302-有什么区别分别适用于什么场景&#34;&gt;&#xA;  301 和 302 有什么区别？分别适用于什么场景？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#301-%e5%92%8c-302-%e6%9c%89%e4%bb%80%e4%b9%88%e5%8c%ba%e5%88%ab%e5%88%86%e5%88%ab%e9%80%82%e7%94%a8%e4%ba%8e%e4%bb%80%e4%b9%88%e5%9c%ba%e6%99%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;101-304-307-分别是什么&#34;&gt;&#xA;  101， 304， 307 分别是什么？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#101-304-307-%e5%88%86%e5%88%ab%e6%98%af%e4%bb%80%e4%b9%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;101 协议升级&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kafka</title>
      <link>https://kingye.me/interview/docs/backend/mq/kafka/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/backend/mq/kafka/</guid>
      <description>&lt;h1 id=&#34;kafka&#34;&gt;&#xA;  Kafka&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#kafka&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;kafka-如何实现一致性&#34;&gt;&#xA;  Kafka 如何实现一致性？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#kafka-%e5%a6%82%e4%bd%95%e5%ae%9e%e7%8e%b0%e4%b8%80%e8%87%b4%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Mysql</title>
      <link>https://kingye.me/interview/docs/backend/db/mysql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/backend/db/mysql/</guid>
      <description>&lt;h1 id=&#34;mysql&#34;&gt;&#xA;  Mysql&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#mysql&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;mysql-有哪些引擎分别有什么特点&#34;&gt;&#xA;  Mysql 有哪些引擎，分别有什么特点？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#mysql-%e6%9c%89%e5%93%aa%e4%ba%9b%e5%bc%95%e6%93%8e%e5%88%86%e5%88%ab%e6%9c%89%e4%bb%80%e4%b9%88%e7%89%b9%e7%82%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;mysql-配置文件在哪里&#34;&gt;&#xA;  Mysql 配置文件在哪里？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#mysql-%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6%e5%9c%a8%e5%93%aa%e9%87%8c&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;mysql-索引是怎么实现的&#34;&gt;&#xA;  Mysql 索引是怎么实现的？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#mysql-%e7%b4%a2%e5%bc%95%e6%98%af%e6%80%8e%e4%b9%88%e5%ae%9e%e7%8e%b0%e7%9a%84&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;mysql-事务是怎么实现的&#34;&gt;&#xA;  Mysql 事务是怎么实现的？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#mysql-%e4%ba%8b%e5%8a%a1%e6%98%af%e6%80%8e%e4%b9%88%e5%ae%9e%e7%8e%b0%e7%9a%84&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;begin 命令并不代表事务的开始，事务开始于 begin 命令之后的第一条语句执行的时候。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;begin&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; xxx;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;commit&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;-- 或者 rollback;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h2 id=&#34;mysql-事务隔离级别有哪些&#34;&gt;&#xA;  Mysql 事务隔离级别有哪些？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#mysql-%e4%ba%8b%e5%8a%a1%e9%9a%94%e7%a6%bb%e7%ba%a7%e5%88%ab%e6%9c%89%e5%93%aa%e4%ba%9b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;隔离级别&lt;/th&gt;&#xA;          &lt;th&gt;脏读&lt;/th&gt;&#xA;          &lt;th&gt;不可重复读&lt;/th&gt;&#xA;          &lt;th&gt;幻读&lt;/th&gt;&#xA;          &lt;th&gt;锁&lt;/th&gt;&#xA;          &lt;th&gt;备注&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;读未提交（&lt;code&gt;READ UNCOMMITTED&lt;/code&gt;）&lt;/td&gt;&#xA;          &lt;td&gt;√&lt;/td&gt;&#xA;          &lt;td&gt;√&lt;/td&gt;&#xA;          &lt;td&gt;√&lt;/td&gt;&#xA;          &lt;td&gt;不加锁&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;读提交 （&lt;code&gt;READ COMMITTED&lt;/code&gt;）&lt;/td&gt;&#xA;          &lt;td&gt;×&lt;/td&gt;&#xA;          &lt;td&gt;√&lt;/td&gt;&#xA;          &lt;td&gt;√&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Oracle 默认&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;可重复读 （&lt;code&gt;REPEATABLE READ&lt;/code&gt;）&lt;/td&gt;&#xA;          &lt;td&gt;×&lt;/td&gt;&#xA;          &lt;td&gt;×&lt;/td&gt;&#xA;          &lt;td&gt;√&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Mysql 默认&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;串行化 （&lt;code&gt;SERIALIZABLE&lt;/code&gt;）&lt;/td&gt;&#xA;          &lt;td&gt;×&lt;/td&gt;&#xA;          &lt;td&gt;×&lt;/td&gt;&#xA;          &lt;td&gt;×&lt;/td&gt;&#xA;          &lt;td&gt;共享锁&lt;/td&gt;&#xA;          &lt;td&gt;相当于单线程&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;可重复读&#xA;&lt;ul&gt;&#xA;&lt;li&gt;事务开始时读到的已有数据是什么，在事务提交前的任意时刻，这些数据的值都是一样的。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;设置隔离级别&lt;/p&gt;</description>
    </item>
    <item>
      <title>TCP/UDP/IP</title>
      <link>https://kingye.me/interview/docs/network/tcp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/network/tcp/</guid>
      <description>&lt;h1 id=&#34;tcpudpip&#34;&gt;&#xA;  TCP/UDP/IP&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#tcpudpip&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;tcp&#34;&gt;&#xA;  TCP&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#tcp&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;</description>
    </item>
    <item>
      <title>XSS</title>
      <link>https://kingye.me/interview/docs/security/web/xss/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/security/web/xss/</guid>
      <description>&lt;h1 id=&#34;xss&#34;&gt;&#xA;  XSS&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#xss&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;什么是-xss为什么会发生-xss&#34;&gt;&#xA;  什么是 XSS，为什么会发生 XSS？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%bb%80%e4%b9%88%e6%98%af-xss%e4%b8%ba%e4%bb%80%e4%b9%88%e4%bc%9a%e5%8f%91%e7%94%9f-xss&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;Cross-site scripting&lt;/code&gt;&#xA;跨站脚本&#xA;(&lt;a href=&#34;https://www.wikiwand.com/zh-cn/%E8%B7%A8%E7%B6%B2%E7%AB%99%E6%8C%87%E4%BB%A4%E7%A2%BC&#34;&gt;wiki&lt;/a&gt;)&lt;/p&gt;&#xA;&lt;h3 id=&#34;xss-发生的原因&#34;&gt;&#xA;  XSS 发生的原因&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#xss-%e5%8f%91%e7%94%9f%e7%9a%84%e5%8e%9f%e5%9b%a0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;没有将&lt;strong&gt;用户输入的文本&lt;/strong&gt;进行合适的&lt;strong&gt;过滤&lt;/strong&gt;，就贸然插入到 HTML 中，这很容易造成注入漏洞。&#xA;攻击者可以利用漏洞，构造出恶意的&lt;strong&gt;代码指令&lt;/strong&gt;，进而利用恶意代码危害数据安全。&lt;/p&gt;&#xA;&lt;p&gt;不仅仅是业务上的 “用户的 UGC 内容” 可以进行注入，包括 URL 上的参数等都可以是攻击的来源。在处理输入时，以下内容都不可信：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;来自用户的 UGC 信息&lt;/li&gt;&#xA;&lt;li&gt;来自第三方的链接&lt;/li&gt;&#xA;&lt;li&gt;URL 参数&lt;/li&gt;&#xA;&lt;li&gt;POST 参数&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Referer&lt;/code&gt; （可能来自不可信的来源）&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Cookie&lt;/code&gt; （可能来自&lt;strong&gt;其他子域&lt;/strong&gt;注入）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;有哪些-xss-攻击方法&#34;&gt;&#xA;  有哪些 XSS 攻击方法？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%9c%89%e5%93%aa%e4%ba%9b-xss-%e6%94%bb%e5%87%bb%e6%96%b9%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在 HTML 中内嵌的文本中，恶意内容以 script 标签形成注入。&lt;/li&gt;&#xA;&lt;li&gt;在内联的 JavaScript 中，拼接的数据突破了原本的限制（字符串，变量，方法名等）。&lt;/li&gt;&#xA;&lt;li&gt;在标签属性中，恶意内容包含引号，从而突破属性值的限制，注入其他属性或者标签。&lt;/li&gt;&#xA;&lt;li&gt;在标签的 href、src 等属性中，包含 javascript: 等可执行代码。&lt;/li&gt;&#xA;&lt;li&gt;在 onload、onerror、onclick 等事件中，注入不受控制代码。&lt;/li&gt;&#xA;&lt;li&gt;在 style 属性和标签中，包含类似 &lt;code&gt;background-image:url(&amp;quot;javascript:...&amp;quot;);&lt;/code&gt; 的代码（新版本浏览器已经可以防范）。&lt;/li&gt;&#xA;&lt;li&gt;在 style 属性和标签中，包含类似 &lt;code&gt;expression(...)&lt;/code&gt; 的 CSS 表达式代码（新版本浏览器已经可以防范）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;如何防止-xss-攻击&#34;&gt;&#xA;  如何防止 XSS 攻击？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%a6%82%e4%bd%95%e9%98%b2%e6%ad%a2-xss-%e6%94%bb%e5%87%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;输入过滤&#34;&gt;&#xA;  输入过滤&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%be%93%e5%85%a5%e8%bf%87%e6%bb%a4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;输入侧过滤能够在某些情况下解决特定的 XSS 问题，但会引入很大的不确定性和&lt;strong&gt;乱码&lt;/strong&gt;问题。&#xA;在防范 XSS 攻击时应避免此类方法。&lt;/p&gt;</description>
    </item>
    <item>
      <title>二叉树</title>
      <link>https://kingye.me/interview/docs/algs/tree/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/algs/tree/</guid>
      <description>&lt;h1 id=&#34;二叉树&#34;&gt;&#xA;  二叉树&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e5%8f%89%e6%a0%91&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;</description>
    </item>
    <item>
      <title>动态规划</title>
      <link>https://kingye.me/interview/docs/algs/dp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/algs/dp/</guid>
      <description>&lt;h1 id=&#34;动态规划&#34;&gt;&#xA;  动态规划&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8a%a8%e6%80%81%e8%a7%84%e5%88%92&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;</description>
    </item>
    <item>
      <title>发包工具</title>
      <link>https://kingye.me/interview/docs/network/send/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/network/send/</guid>
      <description>&lt;h1 id=&#34;发包工具&#34;&gt;&#xA;  发包工具&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8f%91%e5%8c%85%e5%b7%a5%e5%85%b7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;综合&#34;&gt;&#xA;  综合&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%bb%bc%e5%90%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;常用发包工具有哪些分别有什么特点适用于什么场景&#34;&gt;&#xA;  常用发包工具有哪些？分别有什么特点，适用于什么场景？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b8%b8%e7%94%a8%e5%8f%91%e5%8c%85%e5%b7%a5%e5%85%b7%e6%9c%89%e5%93%aa%e4%ba%9b%e5%88%86%e5%88%ab%e6%9c%89%e4%bb%80%e4%b9%88%e7%89%b9%e7%82%b9%e9%80%82%e7%94%a8%e4%ba%8e%e4%bb%80%e4%b9%88%e5%9c%ba%e6%99%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;packetsender&#34;&gt;&#xA;  PacketSender&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#packetsender&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;</description>
    </item>
    <item>
      <title>字符编码</title>
      <link>https://kingye.me/interview/docs/others/encode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/others/encode/</guid>
      <description>&lt;h1 id=&#34;字符编码&#34;&gt;&#xA;  字符编码&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%ad%97%e7%ac%a6%e7%bc%96%e7%a0%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;有的字符在一些环境中是不能显示或使用的，&#xA;比如 &lt;code&gt;&amp;amp;&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt; 等字符在 URL 被保留为特殊作用的字符；&#xA;比如描述一张图片，而图片中的二进制码如果转成对应的字符的话，会有很多不可见字符和控制符（如换行、回车之类），&#xA;这时就需要对进行编码。&lt;/p&gt;&#xA;&lt;h2 id=&#34;各种编码的特征&#34;&gt;&#xA;  各种编码的特征&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%90%84%e7%a7%8d%e7%bc%96%e7%a0%81%e7%9a%84%e7%89%b9%e5%be%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Base 编码&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Base64&#xA;&lt;ul&gt;&#xA;&lt;li&gt;组成字符：&lt;code&gt;A-Z、a-z、0-9、+、/&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;末尾一般补 0-2 个 &lt;code&gt;=&lt;/code&gt;（可以不补 &lt;code&gt;=&lt;/code&gt;）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Base32&#xA;&lt;ul&gt;&#xA;&lt;li&gt;组成字符：&lt;code&gt;A-Z、2-7&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;末尾一般补 0-6 个 &lt;code&gt;=&lt;/code&gt;（可以不补 &lt;code&gt;=&lt;/code&gt;）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Base16&#xA;&lt;ul&gt;&#xA;&lt;li&gt;组成字符：&lt;code&gt;0-9、A-F&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;末尾没有 &lt;code&gt;=&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;base-编码&#34;&gt;&#xA;  Base 编码&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#base-%e7%bc%96%e7%a0%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;参考：&lt;a href=&#34;https://www.rfc-editor.org/info/rfc4648&#34;&gt;rfc4648&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Base 系列的就是用来将&lt;strong&gt;字节&lt;/strong&gt;编码为 ASCII 中的&lt;strong&gt;可见字符&lt;/strong&gt;的。&lt;/p&gt;&#xA;&lt;p&gt;在 URL 中使用时必须去掉 “&lt;code&gt;=&lt;/code&gt;” 符号&lt;/p&gt;&#xA;&lt;h3 id=&#34;base64&#34;&gt;&#xA;  Base64&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#base64&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Base64 编码是使用 64 个可打印 ASCII 字符（&lt;code&gt;A-Z、a-z、0-9、+、/&lt;/code&gt;）将任意字节序列数据编码成 ASCII 字符串，另有 “&lt;code&gt;=&lt;/code&gt;” 符号用作后缀用途。&lt;/p&gt;&#xA;&lt;p&gt;Base64 将输入字符串按字节切分，取得每个字节对应的二进制值（若不足 8 比特则高位补 0），&#xA;然后将这些二进制数值串联起来，再按照 6 比特一组进行切分（因为 &lt;code&gt;2^6=64&lt;/code&gt;），&lt;strong&gt;最后一组若不足 6 比特则末尾补 0&lt;/strong&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>抓包</title>
      <link>https://kingye.me/interview/docs/network/capture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/network/capture/</guid>
      <description>&lt;h1 id=&#34;抓包&#34;&gt;&#xA;  抓包&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%8a%93%e5%8c%85&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;综合&#34;&gt;&#xA;  综合&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%bb%bc%e5%90%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;常用抓包工具有哪些分别有什么特点适用于什么场景&#34;&gt;&#xA;  常用抓包工具有哪些？分别有什么特点，适用于什么场景？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b8%b8%e7%94%a8%e6%8a%93%e5%8c%85%e5%b7%a5%e5%85%b7%e6%9c%89%e5%93%aa%e4%ba%9b%e5%88%86%e5%88%ab%e6%9c%89%e4%bb%80%e4%b9%88%e7%89%b9%e7%82%b9%e9%80%82%e7%94%a8%e4%ba%8e%e4%bb%80%e4%b9%88%e5%9c%ba%e6%99%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;tcpdump&#34;&gt;&#xA;  tcpdump&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#tcpdump&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;tcpdump -D&lt;/code&gt;: 列出所有可监听设备&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;tcpdump -i&lt;/code&gt;: 指定网络接口（网卡）&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;tcpdump -i any&lt;/code&gt;: 不确定走哪个网卡&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;tcpdump host&lt;/code&gt;: 指定主机&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;tcpdump src host&lt;/code&gt;: 指定主机发送出去的包&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;tcpdump dst host&lt;/code&gt;: 发送到指定主机的包&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;tcpdump tcp&lt;/code&gt;: 指定协议&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;tcpdump port&lt;/code&gt;: 指定端口&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;tcpdump -n&lt;/code&gt;: 直接显示 IP，而不把 IP 解析为主机名&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;tcpdump -nn&lt;/code&gt;: 直接显示 IP 与端口，而不解析为主机名与服务&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;tcpdump -N&lt;/code&gt;: 不打印 host 的域名部分，比如打印 &lt;code&gt;nic&lt;/code&gt; 而不是 &lt;code&gt;nic.ddn.mil&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;tcpdump -w&lt;/code&gt;: 输出到文件&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;tcpdump -tttt&lt;/code&gt;: 更具有可读性的时间格式&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;tcpdump -c&lt;/code&gt;: 抓 n 个包，然后退出&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 监视第一个网络接口上所有流过的数据包&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdump&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 监视指定网络接口的数据包&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdump -i eth1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 截获主机 210.27.48.1 和主机 210.27.48.2 或 210.27.48.3 的通信&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdump host 210.27.48.1 and &lt;span style=&#34;color:#ae81ff&#34;&gt;\ &lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;210.27.48.2 or 210.27.48.3 &lt;span style=&#34;color:#ae81ff&#34;&gt;\)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 截获主机 ace 与任何其他主机之间通信的 IP 数据包，但不包括与 helios 之间的数据包&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdump ip host ace and not helios&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 截获主机 hostname 发送的所有数据&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdump -i eth0 src host hostname&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 截获所有送到主机 hostname 的数据包&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdump -i eth0 dst host hostname&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 获取主机 210.27.48.1 接收或发出的 telnet 包&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdump tcp port &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt; and host 210.27.48.1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 对本机的 udp 端口 123 进行监视&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdump udp port &lt;span style=&#34;color:#ae81ff&#34;&gt;123&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;参考：&lt;/p&gt;</description>
    </item>
    <item>
      <title>排序算法</title>
      <link>https://kingye.me/interview/docs/algs/sort/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/algs/sort/</guid>
      <description>&lt;h1 id=&#34;排序算法&#34;&gt;&#xA;  排序算法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%8e%92%e5%ba%8f%e7%ae%97%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;</description>
    </item>
    <item>
      <title>查询算法</title>
      <link>https://kingye.me/interview/docs/algs/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/algs/search/</guid>
      <description>&lt;h1 id=&#34;查询算法&#34;&gt;&#xA;  查询算法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%9f%a5%e8%af%a2%e7%ae%97%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;</description>
    </item>
    <item>
      <title>设计模式</title>
      <link>https://kingye.me/interview/docs/se/dp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/se/dp/</guid>
      <description>&lt;h1 id=&#34;设计模式&#34;&gt;&#xA;  设计模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;设计原则&#34;&gt;&#xA;  设计原则&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%ae%be%e8%ae%a1%e5%8e%9f%e5%88%99&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;单一职责原则-srp&#34;&gt;&#xA;  单一职责原则 (&lt;code&gt;SRP&lt;/code&gt;)&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8d%95%e4%b8%80%e8%81%8c%e8%b4%a3%e5%8e%9f%e5%88%99-srp&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;开闭原则-open-closed-principle&#34;&gt;&#xA;  开闭原则 (&lt;code&gt;Open Closed Principle&lt;/code&gt;)&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%bc%80%e9%97%ad%e5%8e%9f%e5%88%99-open-closed-principle&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;里氏替换原则-liskov-substitution-principle&#34;&gt;&#xA;  里氏替换原则 (&lt;code&gt;Liskov Substitution Principle&lt;/code&gt;)&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%87%8c%e6%b0%8f%e6%9b%bf%e6%8d%a2%e5%8e%9f%e5%88%99-liskov-substitution-principle&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;依赖倒置原则-dependence-inversion-principle&#34;&gt;&#xA;  依赖倒置原则 (&lt;code&gt;Dependence Inversion Principle&lt;/code&gt;)&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%be%9d%e8%b5%96%e5%80%92%e7%bd%ae%e5%8e%9f%e5%88%99-dependence-inversion-principle&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;接口隔离原则-interface-segregation-principle&#34;&gt;&#xA;  接口隔离原则 (&lt;code&gt;Interface Segregation Principle&lt;/code&gt;)&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%8e%a5%e5%8f%a3%e9%9a%94%e7%a6%bb%e5%8e%9f%e5%88%99-interface-segregation-principle&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;迪米特原则-demeter-principle&#34;&gt;&#xA;  迪米特原则 (&lt;code&gt;Demeter Principle&lt;/code&gt;)&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%bf%aa%e7%b1%b3%e7%89%b9%e5%8e%9f%e5%88%99-demeter-principle&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;创建型模式&#34;&gt;&#xA;  创建型模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%88%9b%e5%bb%ba%e5%9e%8b%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;简单工厂模式&#34;&gt;&#xA;  简单工厂模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ae%80%e5%8d%95%e5%b7%a5%e5%8e%82%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;工厂方法模式&#34;&gt;&#xA;  工厂方法模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b7%a5%e5%8e%82%e6%96%b9%e6%b3%95%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;抽象工厂模式&#34;&gt;&#xA;  抽象工厂模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%8a%bd%e8%b1%a1%e5%b7%a5%e5%8e%82%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;建造者模式&#34;&gt;&#xA;  建造者模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%bb%ba%e9%80%a0%e8%80%85%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;单例模式&#34;&gt;&#xA;  单例模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8d%95%e4%be%8b%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;结构型模式&#34;&gt;&#xA;  结构型模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%bb%93%e6%9e%84%e5%9e%8b%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;适配器模式&#34;&gt;&#xA;  适配器模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%80%82%e9%85%8d%e5%99%a8%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;桥接模式&#34;&gt;&#xA;  桥接模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%a1%a5%e6%8e%a5%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;装饰模式&#34;&gt;&#xA;  装饰模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%a3%85%e9%a5%b0%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;外观模式&#34;&gt;&#xA;  外观模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%a4%96%e8%a7%82%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;享元模式&#34;&gt;&#xA;  享元模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%ab%e5%85%83%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;代理模式&#34;&gt;&#xA;  代理模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%bb%a3%e7%90%86%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;组合模式&#34;&gt;&#xA;  组合模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%bb%84%e5%90%88%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;适配器模式装饰模式代理模式有哪些异同&#34;&gt;&#xA;  适配器模式、装饰模式、代理模式有哪些异同？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%80%82%e9%85%8d%e5%99%a8%e6%a8%a1%e5%bc%8f%e8%a3%85%e9%a5%b0%e6%a8%a1%e5%bc%8f%e4%bb%a3%e7%90%86%e6%a8%a1%e5%bc%8f%e6%9c%89%e5%93%aa%e4%ba%9b%e5%bc%82%e5%90%8c&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;适配器模式&#xA;&lt;ul&gt;&#xA;&lt;li&gt;适配器模式&lt;strong&gt;实现新接口&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;代理模式&#xA;&lt;ul&gt;&#xA;&lt;li&gt;代理模式的特点在于&lt;strong&gt;隔离&lt;/strong&gt;，隔离调用类和被调用类的关系，通过一个代理类去调用。&lt;/li&gt;&#xA;&lt;li&gt;代理模式是与原对象&lt;strong&gt;实现同一个接口&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;代理模式一定是自身持有这个对象，不需要从外部传入。而装饰模式的一定是从外部传入。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;装饰器模式&#xA;&lt;ul&gt;&#xA;&lt;li&gt;原有的不能满足现有的需求，对原有的进行增强。&lt;/li&gt;&#xA;&lt;li&gt;装饰器模式特点在于&lt;strong&gt;增强&lt;/strong&gt;，他的特点是被装饰类和所有的装饰类必须实现同一个接口，而且必须持有被装饰的对象，可以无限装饰。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;装饰器模式与代理模式实现原接口&lt;/li&gt;&#xA;&lt;li&gt;都持有原对象&#xA;&lt;ul&gt;&#xA;&lt;li&gt;装饰器模式构造函数&lt;strong&gt;接收老对象&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;适配器模式与代理模式自己 new 老对象&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; * 原接口，需要传入 orderId，时间&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;SourceOrderApi&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;updateDate&lt;/span&gt;(String orderId, String date, String client);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;SourceOrderApiImpl&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;implements&lt;/span&gt; SourceOrderApi{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Override&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;updateDate&lt;/span&gt;(String orderId, String date, String client) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(client&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;已将订单&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;orderId&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;的有效期延长至&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;date);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Test&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; args) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        SourceOrderApi sourceOrderApi &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; SourceOrderApiImpl();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sourceOrderApi.&lt;span style=&#34;color:#a6e22e&#34;&gt;updateDate&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;123456&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2014-10-15&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; * 适配器模式&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;AppOrderApi&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;//只需要传入订单Id即可&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;updateDate&lt;/span&gt;(String orderId, String client);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;AppOrderApiImpl&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;implements&lt;/span&gt; AppOrderApi{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    SourceOrderApi sourceOrderApi;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;AppOrderApiImpl&lt;/span&gt;(){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sourceOrderApi &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; SourceOrderApiImpl();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Override&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;updateDate&lt;/span&gt;(String orderId,String client) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;//这里适配的方式随意，但是保证是要完全兼容原有的，就是保证调用原有的接口&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sourceOrderApi.&lt;span style=&#34;color:#a6e22e&#34;&gt;updateDate&lt;/span&gt;(orderId, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;9999-12-31&amp;#34;&lt;/span&gt;, client);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Test&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; args) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        AppOrderApi appOrderApi &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; AppOrderApiImpl();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        appOrderApi.&lt;span style=&#34;color:#a6e22e&#34;&gt;updateDate&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;123456&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; * 代理模式&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ProxySourceOrderApiImpl&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;implements&lt;/span&gt; SourceOrderApi {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    SourceOrderApi sourceOrderApi;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ProxySourceOrderApiImpl&lt;/span&gt;(){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sourceOrderApi &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; SourceOrderApiImpl();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Override&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;updateDate&lt;/span&gt;(String orderId, String date, String client) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;//进行判断，如果是admin则更新否则让其输入账号密码&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;admin&amp;#34;&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;equals&lt;/span&gt;(client)){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sourceOrderApi.&lt;span style=&#34;color:#a6e22e&#34;&gt;updateDate&lt;/span&gt;(orderId, date, client);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;账号不是admin，没有查询权限，请输入以admin操作&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; * 装饰器模式&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NewSourceOrderApiImpl&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;implements&lt;/span&gt; SourceOrderApi {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    SourceOrderApi sourceOrderApi;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NewSourceOrderApiImpl&lt;/span&gt;(SourceOrderApi sourceOrderApi){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;sourceOrderApi&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sourceOrderApi;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Override&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;updateDate&lt;/span&gt;(String orderId, String date, String client) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sourceOrderApi.&lt;span style=&#34;color:#a6e22e&#34;&gt;updateDate&lt;/span&gt;(orderId, date, client);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(client&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;已将订单&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;orderId&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;的退款期延长至&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;date);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;行为型模式&#34;&gt;&#xA;  行为型模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%a1%8c%e4%b8%ba%e5%9e%8b%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;命令模式&#34;&gt;&#xA;  命令模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%91%bd%e4%bb%a4%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;中介者模式&#34;&gt;&#xA;  中介者模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%ad%e4%bb%8b%e8%80%85%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;观察者模式&#34;&gt;&#xA;  观察者模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%a7%82%e5%af%9f%e8%80%85%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;状态模式&#34;&gt;&#xA;  状态模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%8a%b6%e6%80%81%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;策略模式&#34;&gt;&#xA;  策略模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ad%96%e7%95%a5%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;模板方法模式&#34;&gt;&#xA;  模板方法模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%a8%a1%e6%9d%bf%e6%96%b9%e6%b3%95%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;迭代子模式&#34;&gt;&#xA;  迭代子模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%bf%ad%e4%bb%a3%e5%ad%90%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;责任链模式&#34;&gt;&#xA;  责任链模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%b4%a3%e4%bb%bb%e9%93%be%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;备忘录模式&#34;&gt;&#xA;  备忘录模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%a4%87%e5%bf%98%e5%bd%95%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;访问者模式&#34;&gt;&#xA;  访问者模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%ae%bf%e9%97%ae%e8%80%85%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;解释器模式&#34;&gt;&#xA;  解释器模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%a7%a3%e9%87%8a%e5%99%a8%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;其他模式&#34;&gt;&#xA;  其他模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%b6%e4%bb%96%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;并发型模式&#34;&gt;&#xA;  并发型模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b9%b6%e5%8f%91%e5%9e%8b%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;线程池模式&#34;&gt;&#xA;  线程池模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ba%bf%e7%a8%8b%e6%b1%a0%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;</description>
    </item>
    <item>
      <title>配置热加载</title>
      <link>https://kingye.me/interview/docs/backend/others/hot-load/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/backend/others/hot-load/</guid>
      <description>&lt;h1 id=&#34;配置热加载&#34;&gt;&#xA;  配置热加载&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%85%8d%e7%bd%ae%e7%83%ad%e5%8a%a0%e8%bd%bd&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;</description>
    </item>
    <item>
      <title>链表</title>
      <link>https://kingye.me/interview/docs/algs/link/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/algs/link/</guid>
      <description>&lt;h1 id=&#34;链表&#34;&gt;&#xA;  链表&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%93%be%e8%a1%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;</description>
    </item>
    <item>
      <title>C&#43;&#43;</title>
      <link>https://kingye.me/interview/docs/pl/cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/pl/cpp/</guid>
      <description>&lt;h1 id=&#34;c&#34;&gt;&#xA;  C++&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#c&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;blockquote class=&#34;book-hint info&#34;&gt;&#xA;  &lt;p&gt;更多教程详见：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kingye.me/study-cpp/&#34;&gt;C++ 学习笔记&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/huihut/interview&#34;&gt;huihut/interview&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/huihut/interview.svg&#34; alt=&#34;Github stars&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/languages/top/huihut/interview.svg&#34; alt=&#34;Language&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/v/tag/huihut/interview.svg?sort=semver&#34; alt=&#34;Last Tag&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/last-commit/huihut/interview.svg&#34; alt=&#34;Last commit&#34; /&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;h2 id=&#34;基础&#34;&gt;&#xA;  基础&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9f%ba%e7%a1%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;进阶&#34;&gt;&#xA;  进阶&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%bf%9b%e9%98%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;设计与实现&#34;&gt;&#xA;  设计与实现&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%ae%be%e8%ae%a1%e4%b8%8e%e5%ae%9e%e7%8e%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;</description>
    </item>
    <item>
      <title>CSRF</title>
      <link>https://kingye.me/interview/docs/security/web/csrf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/security/web/csrf/</guid>
      <description>&lt;h1 id=&#34;csrf&#34;&gt;&#xA;  CSRF&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#csrf&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;什么是-csrf为什么会发生-csrf&#34;&gt;&#xA;  什么是 CSRF，为什么会发生 CSRF？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%bb%80%e4%b9%88%e6%98%af-csrf%e4%b8%ba%e4%bb%80%e4%b9%88%e4%bc%9a%e5%8f%91%e7%94%9f-csrf&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;有哪些-csrf-攻击方法&#34;&gt;&#xA;  有哪些 CSRF 攻击方法？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%9c%89%e5%93%aa%e4%ba%9b-csrf-%e6%94%bb%e5%87%bb%e6%96%b9%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;如何防止-csrf-攻击&#34;&gt;&#xA;  如何防止 CSRF 攻击？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%a6%82%e4%bd%95%e9%98%b2%e6%ad%a2-csrf-%e6%94%bb%e5%87%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Java Web 后端</title>
      <link>https://kingye.me/interview/docs/backend/web/java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/backend/web/java/</guid>
      <description>&lt;h1 id=&#34;java-web-后端&#34;&gt;&#xA;  Java Web 后端&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#java-web-%e5%90%8e%e7%ab%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;spring&#34;&gt;&#xA;  Spring&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#spring&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Kubernetes</title>
      <link>https://kingye.me/interview/docs/cloud/kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/cloud/kubernetes/</guid>
      <description>&lt;h1 id=&#34;kubernetes&#34;&gt;&#xA;  Kubernetes&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#kubernetes&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;更多内容见：&lt;a href=&#34;https://kingye.me/interview/study-kubernetes/&#34; target=&#34;_blank&#34;&gt;Kubernetes 学习笔记&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;参考：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.qikqiak.com/post/k8s-api-resources-group-and-version/&#34;&gt;Kubernetes API 资源使用 - 应该使用哪个 Group 和 Version?&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;端口&#34;&gt;&#xA;  端口&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ab%af%e5%8f%a3&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;containerPort&lt;/code&gt;：在容器上，用于被 pod 绑定，是可选的，仅仅是提示信息，容器中任何监听 &lt;code&gt;0.0.0.0&lt;/code&gt; 的端口，都会暴露出来&#xA;&lt;ul&gt;&#xA;&lt;li&gt;是可选的，仅仅是提示信息&lt;/li&gt;&#xA;&lt;li&gt;容器中任何监听 &lt;code&gt;0.0.0.0&lt;/code&gt; 的端口，都会暴露出来&lt;/li&gt;&#xA;&lt;li&gt;无法被更新&#xA;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/ikingye/imagehost/picgo/20200918141459.png&#34; alt=&#34;&#34; /&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;targetPort&lt;/code&gt;：在 pod 上，从 port 和 nodePort 上来的流量，经过 kube-proxy 流入到后端 pod 的 targetPort 上，最后进入容器&#xA;&lt;ul&gt;&#xA;&lt;li&gt;targetPort 和 containerPort 是一致的&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;targetPort and containerPort must be identical most of the time because whatever port is open for your application in a container that would be the same port you will wish to send traffic from service via targetPort.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Redis</title>
      <link>https://kingye.me/interview/docs/backend/db/redis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/backend/db/redis/</guid>
      <description>&lt;h1 id=&#34;redis&#34;&gt;&#xA;  Redis&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#redis&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;redis-有哪些数据结构分别适用什么场景&#34;&gt;&#xA;  Redis 有哪些数据结构，分别适用什么场景？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#redis-%e6%9c%89%e5%93%aa%e4%ba%9b%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84%e5%88%86%e5%88%ab%e9%80%82%e7%94%a8%e4%bb%80%e4%b9%88%e5%9c%ba%e6%99%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;redis-数据结构是如何实现的&#34;&gt;&#xA;  Redis 数据结构是如何实现的？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#redis-%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84%e6%98%af%e5%a6%82%e4%bd%95%e5%ae%9e%e7%8e%b0%e7%9a%84&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;redis-如何做持久化&#34;&gt;&#xA;  Redis 如何做持久化？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#redis-%e5%a6%82%e4%bd%95%e5%81%9a%e6%8c%81%e4%b9%85%e5%8c%96&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;rdb&#34;&gt;&#xA;  RDB&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#rdb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;在指定的时间间隔能对你的数据进行快照存储&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 时间策略&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;save &lt;span style=&#34;color:#ae81ff&#34;&gt;900&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;save &lt;span style=&#34;color:#ae81ff&#34;&gt;300&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;save &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10000&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 文件名称&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dbfilename dump.rdb&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 文件保存路径&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dir /home/work/app/redis/data/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 如果持久化出错，主进程是否停止写入&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;stop-writes-on-bgsave-error yes&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 是否压缩&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rdbcompression yes&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 导入时是否检查&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rdbchecksum yes&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;aof&#34;&gt;&#xA;  AOF&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#aof&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 是否开启aof&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;appendonly yes&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 文件名称&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;appendfilename &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;appendonly.aof&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 同步方式&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;appendfsync everysec&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# aof重写期间是否同步&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;no-appendfsync-on-rewrite no&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 重写触发配置&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;auto-aof-rewrite-percentage &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;auto-aof-rewrite-min-size 64mb&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 加载aof时如果有错如何处理&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aof-load-truncated yes&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 文件重写策略&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aof-rewrite-incremental-fsync yes&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h2 id=&#34;redis-是单进程单线程这么设计有什么优点&#34;&gt;&#xA;  Redis 是单进程单线程，这么设计有什么优点？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#redis-%e6%98%af%e5%8d%95%e8%bf%9b%e7%a8%8b%e5%8d%95%e7%ba%bf%e7%a8%8b%e8%bf%99%e4%b9%88%e8%ae%be%e8%ae%a1%e6%9c%89%e4%bb%80%e4%b9%88%e4%bc%98%e7%82%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;</description>
    </item>
    <item>
      <title>RocketMQ</title>
      <link>https://kingye.me/interview/docs/backend/mq/rocketmq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/backend/mq/rocketmq/</guid>
      <description>&lt;h1 id=&#34;rocketmq&#34;&gt;&#xA;  RocketMQ&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#rocketmq&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;</description>
    </item>
    <item>
      <title>加密</title>
      <link>https://kingye.me/interview/docs/others/encryption/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/others/encryption/</guid>
      <description>&lt;h1 id=&#34;加密&#34;&gt;&#xA;  加密&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8a%a0%e5%af%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;ssltls&#34;&gt;&#xA;  SSL/TLS&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ssltls&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;tls-握手流程是什么样的&#34;&gt;&#xA;  TLS 握手流程是什么样的？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#tls-%e6%8f%a1%e6%89%8b%e6%b5%81%e7%a8%8b%e6%98%af%e4%bb%80%e4%b9%88%e6%a0%b7%e7%9a%84&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;参考：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.wangriyu.wang/2018/03-http-tls.html&#34;&gt;SSL/TLS 详解&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>架构设计</title>
      <link>https://kingye.me/interview/docs/se/architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/se/architecture/</guid>
      <description>&lt;h1 id=&#34;架构设计&#34;&gt;&#xA;  架构设计&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%9e%b6%e6%9e%84%e8%ae%be%e8%ae%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;架构设计原则&#34;&gt;&#xA;  架构设计原则&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%9e%b6%e6%9e%84%e8%ae%be%e8%ae%a1%e5%8e%9f%e5%88%99&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;cap-consistency-availability-partition-tolerance&#34;&gt;&#xA;  CAP (&lt;code&gt;Consistency&lt;/code&gt;, &lt;code&gt;Availability&lt;/code&gt;, &lt;code&gt;Partition tolerance&lt;/code&gt;)&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#cap-consistency-availability-partition-tolerance&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;如何理解-cap你在做系统设计时是如何取舍的&#34;&gt;&#xA;  如何理解 CAP，你在做系统设计时是如何取舍的？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%a6%82%e4%bd%95%e7%90%86%e8%a7%a3-cap%e4%bd%a0%e5%9c%a8%e5%81%9a%e7%b3%bb%e7%bb%9f%e8%ae%be%e8%ae%a1%e6%97%b6%e6%98%af%e5%a6%82%e4%bd%95%e5%8f%96%e8%88%8d%e7%9a%84&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;acid-atomicity-consistency-isolation-durability&#34;&gt;&#xA;  ACID (&lt;code&gt;Atomicity&lt;/code&gt;, &lt;code&gt;Consistency&lt;/code&gt;, &lt;code&gt;Isolation&lt;/code&gt;, &lt;code&gt;Durability&lt;/code&gt;)&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#acid-atomicity-consistency-isolation-durability&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;ACID&lt;/code&gt; 是追求 &lt;code&gt;CAP&lt;/code&gt; 的一致性 (&lt;code&gt;C&lt;/code&gt;)&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;base-basically-available-soft-state-eventual-consistency&#34;&gt;&#xA;  BASE (&lt;code&gt;Basically Available&lt;/code&gt;, &lt;code&gt;Soft state&lt;/code&gt;, &lt;code&gt;Eventual consistency&lt;/code&gt;)&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#base-basically-available-soft-state-eventual-consistency&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;BASE&lt;/code&gt; 是追求 &lt;code&gt;CAP&lt;/code&gt; 的可用性 (&lt;code&gt;A&lt;/code&gt;)&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;高性能&#34;&gt;&#xA;  高性能&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%ab%98%e6%80%a7%e8%83%bd&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;高可用&#34;&gt;&#xA;  高可用&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%ab%98%e5%8f%af%e7%94%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;高并发&#34;&gt;&#xA;  高并发&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%ab%98%e5%b9%b6%e5%8f%91&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;高扩展性&#34;&gt;&#xA;  高扩展性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%ab%98%e6%89%a9%e5%b1%95%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;</description>
    </item>
    <item>
      <title>程序热重启</title>
      <link>https://kingye.me/interview/docs/backend/others/hot-restart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/backend/others/hot-restart/</guid>
      <description>&lt;h1 id=&#34;程序热重启&#34;&gt;&#xA;  程序热重启&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%a8%8b%e5%ba%8f%e7%83%ad%e9%87%8d%e5%90%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;程序如何优雅退出&#34;&gt;&#xA;  程序如何优雅退出？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%a8%8b%e5%ba%8f%e5%a6%82%e4%bd%95%e4%bc%98%e9%9b%85%e9%80%80%e5%87%ba&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;linux-信号&#34;&gt;&#xA;  Linux 信号&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#linux-%e4%bf%a1%e5%8f%b7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;信号是进程间通信的底层形式。&lt;/p&gt;&#xA;&lt;p&gt;Linux 有标准信号 32 个，从 32-63 的信号是&lt;strong&gt;实时&lt;/strong&gt;信号。&lt;/p&gt;&#xA;&lt;p&gt;发送信号的原因：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;硬件异常：如 0 作为除数，内核会发送 SIGFPE（信号值 8）&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;软件异常：如进程终止时，内核会给父进程发送 SIGCHLE（信号值 17），窗口大小调整，应用程序会收到 SIGWINCH（信号值 28）&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;SIGINT&lt;/code&gt; 2&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;ctrl + C&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;SIGQUIT&lt;/code&gt; 3&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;ctrl + \&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;SIGKILL&lt;/code&gt; 9&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;不可以&lt;/strong&gt;被阻塞、处理和忽略&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;SIGTERM&lt;/code&gt; 15&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;kill&lt;/code&gt; 默认不带参数，发送的信号就是 &lt;code&gt;SIGTERM&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;可以被阻塞、处理和忽略&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;SIGTOP&lt;/code&gt; 20&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;停止（挂起）进程 &lt;code&gt;ctrl + D&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;book-tabs&#34;&gt;&lt;input type=&#34;radio&#34; class=&#34;toggle&#34; name=&#34;tabs-graceful exit&#34; id=&#34;tabs-graceful exit-0&#34; checked=&#34;checked&#34; /&gt;&#xA;  &lt;label for=&#34;tabs-graceful exit-0&#34;&gt;Go&lt;/label&gt;&#xA;  &lt;div class=&#34;book-tabs-content markdown-inner&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sigs&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; make(&lt;span style=&#34;color:#66d9ef&#34;&gt;chan&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Signal&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;signal&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Notify&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;sigs&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;syscall&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;SIGINT&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;syscall&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;SIGTERM&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;awaiting signal&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sigs&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;exiting&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;input type=&#34;radio&#34; class=&#34;toggle&#34; name=&#34;tabs-graceful exit&#34; id=&#34;tabs-graceful exit-1&#34;  /&gt;&#xA;  &lt;label for=&#34;tabs-graceful exit-1&#34;&gt;Java&lt;/label&gt;&#xA;  &lt;div class=&#34;book-tabs-content markdown-inner&#34;&gt;&lt;/div&gt;&lt;input type=&#34;radio&#34; class=&#34;toggle&#34; name=&#34;tabs-graceful exit&#34; id=&#34;tabs-graceful exit-2&#34;  /&gt;&#xA;  &lt;label for=&#34;tabs-graceful exit-2&#34;&gt;Python&lt;/label&gt;&#xA;  &lt;div class=&#34;book-tabs-content markdown-inner&#34;&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;如何实现热重启的&#34;&gt;&#xA;  如何实现热重启的？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%a6%82%e4%bd%95%e5%ae%9e%e7%8e%b0%e7%83%ad%e9%87%8d%e5%90%af%e7%9a%84&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;服务端启动时多开启一个协程用来监听关闭信号&lt;/li&gt;&#xA;&lt;li&gt;当协程接收到关闭信号时，将拒绝接收新的连接，并处理好当前所有连接后断开&lt;/li&gt;&#xA;&lt;li&gt;启动一个新的服务端&lt;strong&gt;进程&lt;/strong&gt;来接管新的连接&lt;/li&gt;&#xA;&lt;li&gt;关闭当前&lt;strong&gt;进程&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;book-tabs&#34;&gt;&lt;input type=&#34;radio&#34; class=&#34;toggle&#34; name=&#34;tabs-graceful restart&#34; id=&#34;tabs-graceful restart-0&#34; checked=&#34;checked&#34; /&gt;&#xA;  &lt;label for=&#34;tabs-graceful restart-0&#34;&gt;Go&lt;/label&gt;&#xA;  &lt;div class=&#34;book-tabs-content markdown-inner&#34;&gt;&lt;h3 id=&#34;go-程序优雅关闭与重启&#34;&gt;&#xA;  Go 程序优雅关闭与重启&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#go-%e7%a8%8b%e5%ba%8f%e4%bc%98%e9%9b%85%e5%85%b3%e9%97%ad%e4%b8%8e%e9%87%8d%e5%90%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;参考：&lt;/p&gt;</description>
    </item>
    <item>
      <title>PHP 后端</title>
      <link>https://kingye.me/interview/docs/backend/web/php/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/backend/web/php/</guid>
      <description>&lt;h1 id=&#34;php-后端&#34;&gt;&#xA;  PHP 后端&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#php-%e5%90%8e%e7%ab%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;</description>
    </item>
    <item>
      <title>RabbitMQ</title>
      <link>https://kingye.me/interview/docs/backend/mq/rabbitmq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/backend/mq/rabbitmq/</guid>
      <description>&lt;h1 id=&#34;rabbitmq&#34;&gt;&#xA;  RabbitMQ&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#rabbitmq&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;</description>
    </item>
    <item>
      <title>编译</title>
      <link>https://kingye.me/interview/docs/others/compile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/others/compile/</guid>
      <description>&lt;h1 id=&#34;编译&#34;&gt;&#xA;  编译&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%bc%96%e8%af%91&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;</description>
    </item>
    <item>
      <title>Go</title>
      <link>https://kingye.me/interview/docs/pl/go/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/pl/go/</guid>
      <description>&lt;h1 id=&#34;go&#34;&gt;&#xA;  Go&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#go&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;blockquote class=&#34;book-hint info&#34;&gt;&#xA;  &lt;p&gt;更多教程详见：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kingye.me/study-go/&#34;&gt;Go 学习笔记&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/shgopher/GOFamily&#34;&gt;shgopher/GOFamily&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/shgopher/GOFamily.svg&#34; alt=&#34;Github stars&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/languages/top/shgopher/GOFamily.svg&#34; alt=&#34;Language&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/v/tag/shgopher/GOFamily.svg?sort=semver&#34; alt=&#34;Last Tag&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/last-commit/shgopher/GOFamily.svg&#34; alt=&#34;Last commit&#34; /&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/geektutu/interview-questions&#34;&gt;geektutu/interview-questions&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/geektutu/interview-questions.svg&#34; alt=&#34;Github stars&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/languages/top/geektutu/interview-questions.svg&#34; alt=&#34;Language&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/v/tag/geektutu/interview-questions.svg?sort=semver&#34; alt=&#34;Last Tag&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/last-commit/geektutu/interview-questions.svg&#34; alt=&#34;Last commit&#34; /&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;h2 id=&#34;基础&#34;&gt;&#xA;  基础&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9f%ba%e7%a1%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;接口&#34;&gt;&#xA;  接口&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%8e%a5%e5%8f%a3&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;如果一个类型使用 &lt;code&gt;value receiver&lt;/code&gt; 实现了某个 interface 的所有方法，那么这个类型的 &lt;strong&gt;value 和 pointer&lt;/strong&gt; 都实现了该 interface&lt;/li&gt;&#xA;&lt;li&gt;如果一个类型使用 &lt;code&gt;pointer receiver&lt;/code&gt; 实现了某个 interface 的所有方法，那么这个类型只有 &lt;strong&gt;pointer&lt;/strong&gt; 都实现了该 interface&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;参考：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://golangbyexample.com/pointer-vs-value-receiver-method-golang/&#34;&gt;Pointer vs Value Receiver in methods while implementing an interface in Go&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;标准库&#34;&gt;&#xA;  标准库&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%a0%87%e5%87%86%e5%ba%93&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;为什么需要-responsebodyclose&#34;&gt;&#xA;  为什么需要 &lt;code&gt;response.Body.Close()&lt;/code&gt;？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%ba%e4%bb%80%e4%b9%88%e9%9c%80%e8%a6%81-responsebodyclose&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;p&gt;为了 TCP 连接复用&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python 后端</title>
      <link>https://kingye.me/interview/docs/backend/web/python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/backend/web/python/</guid>
      <description>&lt;h1 id=&#34;python-后端&#34;&gt;&#xA;  Python 后端&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#python-%e5%90%8e%e7%ab%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;</description>
    </item>
    <item>
      <title>Cloud Native</title>
      <link>https://kingye.me/interview/docs/cloud/native/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/cloud/native/</guid>
      <description>&lt;h1 id=&#34;cloud-native&#34;&gt;&#xA;  Cloud Native&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#cloud-native&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;</description>
    </item>
    <item>
      <title>Java</title>
      <link>https://kingye.me/interview/docs/pl/java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/pl/java/</guid>
      <description>&lt;h1 id=&#34;java&#34;&gt;&#xA;  Java&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#java&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;blockquote class=&#34;book-hint info&#34;&gt;&#xA;  &lt;p&gt;更多教程详见：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kingye.me/study-java/&#34;&gt;Java 学习笔记&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/Snailclimb/JavaGuide&#34;&gt;Snailclimb/JavaGuide&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/Snailclimb/JavaGuide.svg&#34; alt=&#34;Github stars&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/languages/top/Snailclimb/JavaGuide.svg&#34; alt=&#34;Language&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/v/tag/Snailclimb/JavaGuide.svg?sort=semver&#34; alt=&#34;Last Tag&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/last-commit/Snailclimb/JavaGuide.svg&#34; alt=&#34;Last commit&#34; /&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;h2 id=&#34;基础&#34;&gt;&#xA;  基础&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9f%ba%e7%a1%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;进阶&#34;&gt;&#xA;  进阶&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%bf%9b%e9%98%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;设计与实现&#34;&gt;&#xA;  设计与实现&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%ae%be%e8%ae%a1%e4%b8%8e%e5%ae%9e%e7%8e%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;</description>
    </item>
    <item>
      <title>JavaScript</title>
      <link>https://kingye.me/interview/docs/pl/javascript/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/pl/javascript/</guid>
      <description>&lt;h1 id=&#34;javascript&#34;&gt;&#xA;  JavaScript&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#javascript&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;blockquote class=&#34;book-hint info&#34;&gt;&#xA;  更多教程详见：&lt;a href=&#34;https://kingye.me/study-javascript/&#34;&gt;JavaScript 学习笔记&lt;/a&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;h2 id=&#34;基础&#34;&gt;&#xA;  基础&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9f%ba%e7%a1%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;进阶&#34;&gt;&#xA;  进阶&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%bf%9b%e9%98%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;设计与实现&#34;&gt;&#xA;  设计与实现&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%ae%be%e8%ae%a1%e4%b8%8e%e5%ae%9e%e7%8e%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Kotlin</title>
      <link>https://kingye.me/interview/docs/pl/kotlin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/pl/kotlin/</guid>
      <description>&lt;h1 id=&#34;kotlin&#34;&gt;&#xA;  Kotlin&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#kotlin&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;blockquote class=&#34;book-hint info&#34;&gt;&#xA;  更多教程详见：&lt;a href=&#34;https://kingye.me/study-kotlin/&#34;&gt;Kotlin 学习笔记&lt;/a&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;h2 id=&#34;基础&#34;&gt;&#xA;  基础&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9f%ba%e7%a1%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;进阶&#34;&gt;&#xA;  进阶&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%bf%9b%e9%98%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;设计与实现&#34;&gt;&#xA;  设计与实现&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%ae%be%e8%ae%a1%e4%b8%8e%e5%ae%9e%e7%8e%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;</description>
    </item>
    <item>
      <title>PHP</title>
      <link>https://kingye.me/interview/docs/pl/php/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/pl/php/</guid>
      <description>&lt;h1 id=&#34;php&#34;&gt;&#xA;  PHP&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#php&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;blockquote class=&#34;book-hint info&#34;&gt;&#xA;  &lt;p&gt;更多教程详见：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kingye.me/study-php/&#34;&gt;PHP 学习笔记&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/colinlet/PHP-Interview-QA&#34;&gt;colinlet/PHP-Interview-QA&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/colinlet/PHP-Interview-QA.svg&#34; alt=&#34;Github stars&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/languages/top/colinlet/PHP-Interview-QA.svg&#34; alt=&#34;Language&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/v/tag/colinlet/PHP-Interview-QA.svg?sort=semver&#34; alt=&#34;Last Tag&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/last-commit/colinlet/PHP-Interview-QA.svg&#34; alt=&#34;Last commit&#34; /&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;h2 id=&#34;基础&#34;&gt;&#xA;  基础&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9f%ba%e7%a1%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;进阶&#34;&gt;&#xA;  进阶&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%bf%9b%e9%98%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;设计与实现&#34;&gt;&#xA;  设计与实现&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%ae%be%e8%ae%a1%e4%b8%8e%e5%ae%9e%e7%8e%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Python</title>
      <link>https://kingye.me/interview/docs/pl/python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/pl/python/</guid>
      <description>&lt;h1 id=&#34;python&#34;&gt;&#xA;  Python&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#python&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;blockquote class=&#34;book-hint info&#34;&gt;&#xA;  &lt;p&gt;更多教程详见：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://kingye.me/study-python/&#34;&gt;Python 学习笔记&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/taizilongxu/interview_python&#34;&gt;taizilongxu/interview_python&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/taizilongxu/interview_python.svg&#34; alt=&#34;Github stars&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/languages/top/taizilongxu/interview_python.svg&#34; alt=&#34;Language&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/v/tag/taizilongxu/interview_python.svg?sort=semver&#34; alt=&#34;Last Tag&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/last-commit/taizilongxu/interview_python.svg&#34; alt=&#34;Last commit&#34; /&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/kenwoodjw/python_interview_question&#34;&gt;kenwoodjw/python_interview_question&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/kenwoodjw/python_interview_question.svg&#34; alt=&#34;Github stars&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/languages/top/kenwoodjw/python_interview_question.svg&#34; alt=&#34;Language&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/v/tag/kenwoodjw/python_interview_question.svg?sort=semver&#34; alt=&#34;Last Tag&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/last-commit/kenwoodjw/python_interview_question.svg&#34; alt=&#34;Last commit&#34; /&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;h2 id=&#34;基础&#34;&gt;&#xA;  基础&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9f%ba%e7%a1%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;进阶&#34;&gt;&#xA;  进阶&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%bf%9b%e9%98%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;设计与实现&#34;&gt;&#xA;  设计与实现&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%ae%be%e8%ae%a1%e4%b8%8e%e5%ae%9e%e7%8e%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Rust</title>
      <link>https://kingye.me/interview/docs/pl/rust/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/interview/docs/pl/rust/</guid>
      <description>&lt;h1 id=&#34;rust&#34;&gt;&#xA;  Rust&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#rust&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;blockquote class=&#34;book-hint info&#34;&gt;&#xA;  更多教程详见：&lt;a href=&#34;https://kingye.me/study-rust/&#34;&gt;Rust 学习笔记&lt;/a&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;h2 id=&#34;基础&#34;&gt;&#xA;  基础&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9f%ba%e7%a1%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;进阶&#34;&gt;&#xA;  进阶&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%bf%9b%e9%98%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;设计与实现&#34;&gt;&#xA;  设计与实现&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%ae%be%e8%ae%a1%e4%b8%8e%e5%ae%9e%e7%8e%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;</description>
    </item>
  </channel>
</rss>
