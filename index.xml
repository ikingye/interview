<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>首页 on 面试笔记</title><link>https://kingye.me/interview/</link><description>Recent content in 首页 on 面试笔记</description><generator>Hugo</generator><language>en</language><atom:link href="https://kingye.me/interview/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux</title><link>https://kingye.me/interview/docs/os/linux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/os/linux/</guid><description>&lt;h1 id="linux">
 Linux
 &lt;a class="anchor" href="#linux">#&lt;/a>
&lt;/h1>
&lt;blockquote class="book-hint info">
 更多教程详见：&lt;a href="https://kingye.me/study-linux/" target="_blank">Linux 学习笔记&lt;/a>
&lt;/blockquote>

&lt;h2 id="硬件信息">
 硬件信息
 &lt;a class="anchor" href="#%e7%a1%ac%e4%bb%b6%e4%bf%a1%e6%81%af">#&lt;/a>
&lt;/h2>
&lt;h3 id="如何查看内存大小">
 如何查看内存大小？
 &lt;a class="anchor" href="#%e5%a6%82%e4%bd%95%e6%9f%a5%e7%9c%8b%e5%86%85%e5%ad%98%e5%a4%a7%e5%b0%8f">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>free -m
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="如何查看-cpu-个数cpu-核心数逻辑-cpu-个数">
 如何查看 CPU 个数，CPU 核心数，逻辑 CPU 个数？
 &lt;a class="anchor" href="#%e5%a6%82%e4%bd%95%e6%9f%a5%e7%9c%8b-cpu-%e4%b8%aa%e6%95%b0cpu-%e6%a0%b8%e5%bf%83%e6%95%b0%e9%80%bb%e8%be%91-cpu-%e4%b8%aa%e6%95%b0">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 物理 cpu 个数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cat /proc/cpuinfo| grep &lt;span style="color:#e6db74">&amp;#39;physical id&amp;#39;&lt;/span> | sort | uniq | wc -l
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 每个物理 cpu 的核心数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cat /proc/cpuinfo| grep &lt;span style="color:#e6db74">&amp;#39;core id&amp;#39;&lt;/span> | sort | uniq | wc -l
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 系统中逻辑 cpu 总个数（线程数），多个物理 cpu 的总和&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cat /proc/cpuinfo| grep &lt;span style="color:#e6db74">&amp;#39;processor&amp;#39;&lt;/span> | sort | uniq | wc -l
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lscpu | grep -E &lt;span style="color:#e6db74">&amp;#39;^Thread|^Core|^Socket|^CPU\(&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#CPU(s): 128&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#Thread(s) per core: 2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#Core(s) per socket: 32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#Socket(s): 2&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>例子：&lt;/p></description></item><item><title>C</title><link>https://kingye.me/interview/docs/pl/c/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/pl/c/</guid><description>&lt;h1 id="c">
 C
 &lt;a class="anchor" href="#c">#&lt;/a>
&lt;/h1>
&lt;blockquote class="book-hint info">
 更多教程详见：&lt;a href="https://kingye.me/study-c/">C 学习笔记&lt;/a>
&lt;/blockquote>

&lt;h2 id="基础">
 基础
 &lt;a class="anchor" href="#%e5%9f%ba%e7%a1%80">#&lt;/a>
&lt;/h2>
&lt;hr>
&lt;hr>
&lt;h2 id="进阶">
 进阶
 &lt;a class="anchor" href="#%e8%bf%9b%e9%98%b6">#&lt;/a>
&lt;/h2>
&lt;hr>
&lt;hr>
&lt;h2 id="设计与实现">
 设计与实现
 &lt;a class="anchor" href="#%e8%ae%be%e8%ae%a1%e4%b8%8e%e5%ae%9e%e7%8e%b0">#&lt;/a>
&lt;/h2></description></item><item><title>Docker</title><link>https://kingye.me/interview/docs/cloud/docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/cloud/docker/</guid><description>&lt;h1 id="docker">
 Docker
 &lt;a class="anchor" href="#docker">#&lt;/a>
&lt;/h1>
&lt;p>更多内容见：&lt;a href="https://kingye.me/interview/study-kubernetes/docs/advanced/eco/docker/" target="_blank">Docker 学习笔记&lt;/a>&lt;/p>
&lt;h2 id="entrypoint-vs-cmd">
 &lt;code>entrypoint&lt;/code> vs &lt;code>cmd&lt;/code>
 &lt;a class="anchor" href="#entrypoint-vs-cmd">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>格式&lt;/p>
&lt;ul>
&lt;li>Shell form
&lt;ul>
&lt;li>实际运行的是 &lt;code>/bin/sh -c&lt;/code> 命令
&lt;ul>
&lt;li>有些镜像没有 shell 程序，无法使用这种方式&lt;/li>
&lt;li>从外部发送任何 POSIX 信号到 docker 容器，&lt;code>/bin/sh&lt;/code> 命令不会转发消息给实际运行的命令&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>CMD executable param1 param2&lt;/code>&lt;/li>
&lt;li>&lt;code>ENTRYPOINT executable param1 param2&lt;/code>
&lt;ul>
&lt;li>会忽略 CMD 或者 docker run 参数&lt;/li>
&lt;li>无法覆盖&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Exec form
&lt;ul>
&lt;li>the JSON array format&lt;/li>
&lt;li>&lt;code>CMD [&amp;quot;executable&amp;quot;,&amp;quot;param1&amp;quot;,&amp;quot;param2&amp;quot;]&lt;/code>
&lt;ul>
&lt;li>如果要使用 Shell 环境变量，必须显示使用 &lt;code>sh&lt;/code>&lt;/li>
&lt;li>如 &lt;code>CMD [ &amp;quot;sh&amp;quot;, &amp;quot;-c&amp;quot;, &amp;quot;echo $HOME&amp;quot; ]&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>ENTRYPOINT [&amp;quot;executable&amp;quot;,&amp;quot;param1&amp;quot;,&amp;quot;param2&amp;quot;]&lt;/code>
&lt;ul>
&lt;li>会把 CMD 接到后面作为参数&lt;/li>
&lt;li>docker run 可以覆盖：&lt;code>docker run demo --entrypoint cmd&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>不管是 ENTRYPOINT 还是 CMD 命令，都强烈建议采用 exec 表示法&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>覆盖&lt;/p></description></item><item><title>Go Web 后端</title><link>https://kingye.me/interview/docs/backend/web/go/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/backend/web/go/</guid><description>&lt;h1 id="go-web-后端">
 Go Web 后端
 &lt;a class="anchor" href="#go-web-%e5%90%8e%e7%ab%af">#&lt;/a>
&lt;/h1>
&lt;h2 id="gin">
 Gin
 &lt;a class="anchor" href="#gin">#&lt;/a>
&lt;/h2>
&lt;h2 id="beego">
 Beego
 &lt;a class="anchor" href="#beego">#&lt;/a>
&lt;/h2></description></item><item><title>HTTP</title><link>https://kingye.me/interview/docs/network/http/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/network/http/</guid><description>&lt;h1 id="http">
 HTTP
 &lt;a class="anchor" href="#http">#&lt;/a>
&lt;/h1>
&lt;h2 id="http-基础">
 HTTP 基础
 &lt;a class="anchor" href="#http-%e5%9f%ba%e7%a1%80">#&lt;/a>
&lt;/h2>
&lt;h3 id="http-状态码有哪些">
 HTTP 状态码有哪些？
 &lt;a class="anchor" href="#http-%e7%8a%b6%e6%80%81%e7%a0%81%e6%9c%89%e5%93%aa%e4%ba%9b">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>2XX 成功
&lt;ul>
&lt;li>200 ok（请求成功）&lt;/li>
&lt;li>204 no content （请求成功，但是没有结果返回）&lt;/li>
&lt;li>206 partial content （客户端请求一部分资源，服务端成功响应，返回一范围资源）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>3XX 重定向
&lt;ul>
&lt;li>301 move permanently （永久性重定向）&lt;/li>
&lt;li>302 found （临时性重定向）&lt;/li>
&lt;li>303 see other （示由于请求对应的资源存在着另一个 URI，应使用 GET 方法定向获取请求的资源）&lt;/li>
&lt;li>304 not modified （表示在客户端采用带条件的访问某资源时，服务端找到了资源，但是这个请求的条件不符合。跟重定向无关）&lt;/li>
&lt;li>307 temporary redirect （跟 302 一个意思）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>4XX 客户端错误
&lt;ul>
&lt;li>400 bad request （请求报文存在语法错误）&lt;/li>
&lt;li>401 unauthorized （需要认证（第一次返回）或者认证失败（第二次返回））&lt;/li>
&lt;li>403 forbidden （请求被服务器拒绝了）&lt;/li>
&lt;li>404 not found （服务器上无法找到请求的资源）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>5XX 服务器错误
&lt;ul>
&lt;li>500 internal server error （服务端执行请求时发生了错误）&lt;/li>
&lt;li>503 service unavailable （服务器正在超负载或者停机维护，无法处理请求）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="301-和-302-有什么区别分别适用于什么场景">
 301 和 302 有什么区别？分别适用于什么场景？
 &lt;a class="anchor" href="#301-%e5%92%8c-302-%e6%9c%89%e4%bb%80%e4%b9%88%e5%8c%ba%e5%88%ab%e5%88%86%e5%88%ab%e9%80%82%e7%94%a8%e4%ba%8e%e4%bb%80%e4%b9%88%e5%9c%ba%e6%99%af">#&lt;/a>
&lt;/h3>
&lt;h3 id="101-304-307-分别是什么">
 101， 304， 307 分别是什么？
 &lt;a class="anchor" href="#101-304-307-%e5%88%86%e5%88%ab%e6%98%af%e4%bb%80%e4%b9%88">#&lt;/a>
&lt;/h3>
&lt;p>&lt;strong>101 协议升级&lt;/strong>&lt;/p></description></item><item><title>Kafka</title><link>https://kingye.me/interview/docs/backend/mq/kafka/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/backend/mq/kafka/</guid><description>&lt;h1 id="kafka">
 Kafka
 &lt;a class="anchor" href="#kafka">#&lt;/a>
&lt;/h1>
&lt;h2 id="kafka-如何实现一致性">
 Kafka 如何实现一致性？
 &lt;a class="anchor" href="#kafka-%e5%a6%82%e4%bd%95%e5%ae%9e%e7%8e%b0%e4%b8%80%e8%87%b4%e6%80%a7">#&lt;/a>
&lt;/h2></description></item><item><title>Mysql</title><link>https://kingye.me/interview/docs/backend/db/mysql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/backend/db/mysql/</guid><description>&lt;h1 id="mysql">
 Mysql
 &lt;a class="anchor" href="#mysql">#&lt;/a>
&lt;/h1>
&lt;h2 id="mysql-有哪些引擎分别有什么特点">
 Mysql 有哪些引擎，分别有什么特点？
 &lt;a class="anchor" href="#mysql-%e6%9c%89%e5%93%aa%e4%ba%9b%e5%bc%95%e6%93%8e%e5%88%86%e5%88%ab%e6%9c%89%e4%bb%80%e4%b9%88%e7%89%b9%e7%82%b9">#&lt;/a>
&lt;/h2>
&lt;hr>
&lt;h2 id="mysql-配置文件在哪里">
 Mysql 配置文件在哪里？
 &lt;a class="anchor" href="#mysql-%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6%e5%9c%a8%e5%93%aa%e9%87%8c">#&lt;/a>
&lt;/h2>
&lt;hr>
&lt;h2 id="mysql-索引是怎么实现的">
 Mysql 索引是怎么实现的？
 &lt;a class="anchor" href="#mysql-%e7%b4%a2%e5%bc%95%e6%98%af%e6%80%8e%e4%b9%88%e5%ae%9e%e7%8e%b0%e7%9a%84">#&lt;/a>
&lt;/h2>
&lt;hr>
&lt;h2 id="mysql-事务是怎么实现的">
 Mysql 事务是怎么实现的？
 &lt;a class="anchor" href="#mysql-%e4%ba%8b%e5%8a%a1%e6%98%af%e6%80%8e%e4%b9%88%e5%ae%9e%e7%8e%b0%e7%9a%84">#&lt;/a>
&lt;/h2>
&lt;p>begin 命令并不代表事务的开始，事务开始于 begin 命令之后的第一条语句执行的时候。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">begin&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> xxx;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">commit&lt;/span>; &lt;span style="color:#75715e">-- 或者 rollback;
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="mysql-事务隔离级别有哪些">
 Mysql 事务隔离级别有哪些？
 &lt;a class="anchor" href="#mysql-%e4%ba%8b%e5%8a%a1%e9%9a%94%e7%a6%bb%e7%ba%a7%e5%88%ab%e6%9c%89%e5%93%aa%e4%ba%9b">#&lt;/a>
&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>隔离级别&lt;/th>
 &lt;th>脏读&lt;/th>
 &lt;th>不可重复读&lt;/th>
 &lt;th>幻读&lt;/th>
 &lt;th>锁&lt;/th>
 &lt;th>备注&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>读未提交（&lt;code>READ UNCOMMITTED&lt;/code>）&lt;/td>
 &lt;td>√&lt;/td>
 &lt;td>√&lt;/td>
 &lt;td>√&lt;/td>
 &lt;td>不加锁&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>读提交 （&lt;code>READ COMMITTED&lt;/code>）&lt;/td>
 &lt;td>×&lt;/td>
 &lt;td>√&lt;/td>
 &lt;td>√&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>Oracle 默认&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>可重复读 （&lt;code>REPEATABLE READ&lt;/code>）&lt;/td>
 &lt;td>×&lt;/td>
 &lt;td>×&lt;/td>
 &lt;td>√&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>Mysql 默认&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>串行化 （&lt;code>SERIALIZABLE&lt;/code>）&lt;/td>
 &lt;td>×&lt;/td>
 &lt;td>×&lt;/td>
 &lt;td>×&lt;/td>
 &lt;td>共享锁&lt;/td>
 &lt;td>相当于单线程&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>可重复读
&lt;ul>
&lt;li>事务开始时读到的已有数据是什么，在事务提交前的任意时刻，这些数据的值都是一样的。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>设置隔离级别&lt;/p></description></item><item><title>TCP/UDP/IP</title><link>https://kingye.me/interview/docs/network/tcp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/network/tcp/</guid><description>&lt;h1 id="tcpudpip">
 TCP/UDP/IP
 &lt;a class="anchor" href="#tcpudpip">#&lt;/a>
&lt;/h1>
&lt;h2 id="tcp">
 TCP
 &lt;a class="anchor" href="#tcp">#&lt;/a>
&lt;/h2></description></item><item><title>XSS</title><link>https://kingye.me/interview/docs/security/web/xss/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/security/web/xss/</guid><description>&lt;h1 id="xss">
 XSS
 &lt;a class="anchor" href="#xss">#&lt;/a>
&lt;/h1>
&lt;h2 id="什么是-xss为什么会发生-xss">
 什么是 XSS，为什么会发生 XSS？
 &lt;a class="anchor" href="#%e4%bb%80%e4%b9%88%e6%98%af-xss%e4%b8%ba%e4%bb%80%e4%b9%88%e4%bc%9a%e5%8f%91%e7%94%9f-xss">#&lt;/a>
&lt;/h2>
&lt;p>&lt;code>Cross-site scripting&lt;/code>
跨站脚本
(&lt;a href="https://www.wikiwand.com/zh-cn/%E8%B7%A8%E7%B6%B2%E7%AB%99%E6%8C%87%E4%BB%A4%E7%A2%BC">wiki&lt;/a>)&lt;/p>
&lt;h3 id="xss-发生的原因">
 XSS 发生的原因
 &lt;a class="anchor" href="#xss-%e5%8f%91%e7%94%9f%e7%9a%84%e5%8e%9f%e5%9b%a0">#&lt;/a>
&lt;/h3>
&lt;p>没有将&lt;strong>用户输入的文本&lt;/strong>进行合适的&lt;strong>过滤&lt;/strong>，就贸然插入到 HTML 中，这很容易造成注入漏洞。
攻击者可以利用漏洞，构造出恶意的&lt;strong>代码指令&lt;/strong>，进而利用恶意代码危害数据安全。&lt;/p>
&lt;p>不仅仅是业务上的 “用户的 UGC 内容” 可以进行注入，包括 URL 上的参数等都可以是攻击的来源。在处理输入时，以下内容都不可信：&lt;/p>
&lt;ul>
&lt;li>来自用户的 UGC 信息&lt;/li>
&lt;li>来自第三方的链接&lt;/li>
&lt;li>URL 参数&lt;/li>
&lt;li>POST 参数&lt;/li>
&lt;li>&lt;code>Referer&lt;/code> （可能来自不可信的来源）&lt;/li>
&lt;li>&lt;code>Cookie&lt;/code> （可能来自&lt;strong>其他子域&lt;/strong>注入）&lt;/li>
&lt;/ul>
&lt;h2 id="有哪些-xss-攻击方法">
 有哪些 XSS 攻击方法？
 &lt;a class="anchor" href="#%e6%9c%89%e5%93%aa%e4%ba%9b-xss-%e6%94%bb%e5%87%bb%e6%96%b9%e6%b3%95">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>在 HTML 中内嵌的文本中，恶意内容以 script 标签形成注入。&lt;/li>
&lt;li>在内联的 JavaScript 中，拼接的数据突破了原本的限制（字符串，变量，方法名等）。&lt;/li>
&lt;li>在标签属性中，恶意内容包含引号，从而突破属性值的限制，注入其他属性或者标签。&lt;/li>
&lt;li>在标签的 href、src 等属性中，包含 javascript: 等可执行代码。&lt;/li>
&lt;li>在 onload、onerror、onclick 等事件中，注入不受控制代码。&lt;/li>
&lt;li>在 style 属性和标签中，包含类似 &lt;code>background-image:url(&amp;quot;javascript:...&amp;quot;);&lt;/code> 的代码（新版本浏览器已经可以防范）。&lt;/li>
&lt;li>在 style 属性和标签中，包含类似 &lt;code>expression(...)&lt;/code> 的 CSS 表达式代码（新版本浏览器已经可以防范）。&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="如何防止-xss-攻击">
 如何防止 XSS 攻击？
 &lt;a class="anchor" href="#%e5%a6%82%e4%bd%95%e9%98%b2%e6%ad%a2-xss-%e6%94%bb%e5%87%bb">#&lt;/a>
&lt;/h2>
&lt;h3 id="输入过滤">
 输入过滤
 &lt;a class="anchor" href="#%e8%be%93%e5%85%a5%e8%bf%87%e6%bb%a4">#&lt;/a>
&lt;/h3>
&lt;p>输入侧过滤能够在某些情况下解决特定的 XSS 问题，但会引入很大的不确定性和&lt;strong>乱码&lt;/strong>问题。
在防范 XSS 攻击时应避免此类方法。&lt;/p></description></item><item><title>二叉树</title><link>https://kingye.me/interview/docs/algs/tree/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/algs/tree/</guid><description>&lt;h1 id="二叉树">
 二叉树
 &lt;a class="anchor" href="#%e4%ba%8c%e5%8f%89%e6%a0%91">#&lt;/a>
&lt;/h1></description></item><item><title>动态规划</title><link>https://kingye.me/interview/docs/algs/dp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/algs/dp/</guid><description>&lt;h1 id="动态规划">
 动态规划
 &lt;a class="anchor" href="#%e5%8a%a8%e6%80%81%e8%a7%84%e5%88%92">#&lt;/a>
&lt;/h1></description></item><item><title>发包工具</title><link>https://kingye.me/interview/docs/network/send/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/network/send/</guid><description>&lt;h1 id="发包工具">
 发包工具
 &lt;a class="anchor" href="#%e5%8f%91%e5%8c%85%e5%b7%a5%e5%85%b7">#&lt;/a>
&lt;/h1>
&lt;h2 id="综合">
 综合
 &lt;a class="anchor" href="#%e7%bb%bc%e5%90%88">#&lt;/a>
&lt;/h2>
&lt;h3 id="常用发包工具有哪些分别有什么特点适用于什么场景">
 常用发包工具有哪些？分别有什么特点，适用于什么场景？
 &lt;a class="anchor" href="#%e5%b8%b8%e7%94%a8%e5%8f%91%e5%8c%85%e5%b7%a5%e5%85%b7%e6%9c%89%e5%93%aa%e4%ba%9b%e5%88%86%e5%88%ab%e6%9c%89%e4%bb%80%e4%b9%88%e7%89%b9%e7%82%b9%e9%80%82%e7%94%a8%e4%ba%8e%e4%bb%80%e4%b9%88%e5%9c%ba%e6%99%af">#&lt;/a>
&lt;/h3>
&lt;hr>
&lt;h2 id="packetsender">
 PacketSender
 &lt;a class="anchor" href="#packetsender">#&lt;/a>
&lt;/h2></description></item><item><title>字符编码</title><link>https://kingye.me/interview/docs/others/encode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/others/encode/</guid><description>&lt;h1 id="字符编码">
 字符编码
 &lt;a class="anchor" href="#%e5%ad%97%e7%ac%a6%e7%bc%96%e7%a0%81">#&lt;/a>
&lt;/h1>
&lt;p>有的字符在一些环境中是不能显示或使用的，
比如 &lt;code>&amp;amp;&lt;/code>, &lt;code>=&lt;/code> 等字符在 URL 被保留为特殊作用的字符；
比如描述一张图片，而图片中的二进制码如果转成对应的字符的话，会有很多不可见字符和控制符（如换行、回车之类），
这时就需要对进行编码。&lt;/p>
&lt;h2 id="各种编码的特征">
 各种编码的特征
 &lt;a class="anchor" href="#%e5%90%84%e7%a7%8d%e7%bc%96%e7%a0%81%e7%9a%84%e7%89%b9%e5%be%81">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Base 编码
&lt;ul>
&lt;li>Base64
&lt;ul>
&lt;li>组成字符：&lt;code>A-Z、a-z、0-9、+、/&lt;/code>&lt;/li>
&lt;li>末尾一般补 0-2 个 &lt;code>=&lt;/code>（可以不补 &lt;code>=&lt;/code>）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Base32
&lt;ul>
&lt;li>组成字符：&lt;code>A-Z、2-7&lt;/code>&lt;/li>
&lt;li>末尾一般补 0-6 个 &lt;code>=&lt;/code>（可以不补 &lt;code>=&lt;/code>）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Base16
&lt;ul>
&lt;li>组成字符：&lt;code>0-9、A-F&lt;/code>&lt;/li>
&lt;li>末尾没有 &lt;code>=&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="base-编码">
 Base 编码
 &lt;a class="anchor" href="#base-%e7%bc%96%e7%a0%81">#&lt;/a>
&lt;/h2>
&lt;p>参考：&lt;a href="https://www.rfc-editor.org/info/rfc4648">rfc4648&lt;/a>&lt;/p>
&lt;p>Base 系列的就是用来将&lt;strong>字节&lt;/strong>编码为 ASCII 中的&lt;strong>可见字符&lt;/strong>的。&lt;/p>
&lt;p>在 URL 中使用时必须去掉 “&lt;code>=&lt;/code>” 符号&lt;/p>
&lt;h3 id="base64">
 Base64
 &lt;a class="anchor" href="#base64">#&lt;/a>
&lt;/h3>
&lt;p>Base64 编码是使用 64 个可打印 ASCII 字符（&lt;code>A-Z、a-z、0-9、+、/&lt;/code>）将任意字节序列数据编码成 ASCII 字符串，另有 “&lt;code>=&lt;/code>” 符号用作后缀用途。&lt;/p>
&lt;p>Base64 将输入字符串按字节切分，取得每个字节对应的二进制值（若不足 8 比特则高位补 0），
然后将这些二进制数值串联起来，再按照 6 比特一组进行切分（因为 &lt;code>2^6=64&lt;/code>），&lt;strong>最后一组若不足 6 比特则末尾补 0&lt;/strong>。&lt;/p></description></item><item><title>抓包</title><link>https://kingye.me/interview/docs/network/capture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/network/capture/</guid><description>&lt;h1 id="抓包">
 抓包
 &lt;a class="anchor" href="#%e6%8a%93%e5%8c%85">#&lt;/a>
&lt;/h1>
&lt;h2 id="综合">
 综合
 &lt;a class="anchor" href="#%e7%bb%bc%e5%90%88">#&lt;/a>
&lt;/h2>
&lt;h3 id="常用抓包工具有哪些分别有什么特点适用于什么场景">
 常用抓包工具有哪些？分别有什么特点，适用于什么场景？
 &lt;a class="anchor" href="#%e5%b8%b8%e7%94%a8%e6%8a%93%e5%8c%85%e5%b7%a5%e5%85%b7%e6%9c%89%e5%93%aa%e4%ba%9b%e5%88%86%e5%88%ab%e6%9c%89%e4%bb%80%e4%b9%88%e7%89%b9%e7%82%b9%e9%80%82%e7%94%a8%e4%ba%8e%e4%bb%80%e4%b9%88%e5%9c%ba%e6%99%af">#&lt;/a>
&lt;/h3>
&lt;hr>
&lt;h2 id="tcpdump">
 tcpdump
 &lt;a class="anchor" href="#tcpdump">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;code>tcpdump -D&lt;/code>: 列出所有可监听设备&lt;/li>
&lt;li>&lt;code>tcpdump -i&lt;/code>: 指定网络接口（网卡）
&lt;ul>
&lt;li>&lt;code>tcpdump -i any&lt;/code>: 不确定走哪个网卡&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>tcpdump host&lt;/code>: 指定主机
&lt;ul>
&lt;li>&lt;code>tcpdump src host&lt;/code>: 指定主机发送出去的包&lt;/li>
&lt;li>&lt;code>tcpdump dst host&lt;/code>: 发送到指定主机的包&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>tcpdump tcp&lt;/code>: 指定协议&lt;/li>
&lt;li>&lt;code>tcpdump port&lt;/code>: 指定端口&lt;/li>
&lt;li>&lt;code>tcpdump -n&lt;/code>: 直接显示 IP，而不把 IP 解析为主机名&lt;/li>
&lt;li>&lt;code>tcpdump -nn&lt;/code>: 直接显示 IP 与端口，而不解析为主机名与服务&lt;/li>
&lt;li>&lt;code>tcpdump -N&lt;/code>: 不打印 host 的域名部分，比如打印 &lt;code>nic&lt;/code> 而不是 &lt;code>nic.ddn.mil&lt;/code>&lt;/li>
&lt;li>&lt;code>tcpdump -w&lt;/code>: 输出到文件&lt;/li>
&lt;li>&lt;code>tcpdump -tttt&lt;/code>: 更具有可读性的时间格式&lt;/li>
&lt;li>&lt;code>tcpdump -c&lt;/code>: 抓 n 个包，然后退出&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 监视第一个网络接口上所有流过的数据包&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcpdump
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 监视指定网络接口的数据包&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcpdump -i eth1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 截获主机 210.27.48.1 和主机 210.27.48.2 或 210.27.48.3 的通信&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcpdump host 210.27.48.1 and &lt;span style="color:#ae81ff">\ &lt;/span>&lt;span style="color:#f92672">(&lt;/span>210.27.48.2 or 210.27.48.3 &lt;span style="color:#ae81ff">\)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 截获主机 ace 与任何其他主机之间通信的 IP 数据包，但不包括与 helios 之间的数据包&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcpdump ip host ace and not helios
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 截获主机 hostname 发送的所有数据&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcpdump -i eth0 src host hostname
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 截获所有送到主机 hostname 的数据包&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcpdump -i eth0 dst host hostname
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 获取主机 210.27.48.1 接收或发出的 telnet 包&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcpdump tcp port &lt;span style="color:#ae81ff">23&lt;/span> and host 210.27.48.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 对本机的 udp 端口 123 进行监视&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcpdump udp port &lt;span style="color:#ae81ff">123&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考：&lt;/p></description></item><item><title>排序算法</title><link>https://kingye.me/interview/docs/algs/sort/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/algs/sort/</guid><description>&lt;h1 id="排序算法">
 排序算法
 &lt;a class="anchor" href="#%e6%8e%92%e5%ba%8f%e7%ae%97%e6%b3%95">#&lt;/a>
&lt;/h1></description></item><item><title>查询算法</title><link>https://kingye.me/interview/docs/algs/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/algs/search/</guid><description>&lt;h1 id="查询算法">
 查询算法
 &lt;a class="anchor" href="#%e6%9f%a5%e8%af%a2%e7%ae%97%e6%b3%95">#&lt;/a>
&lt;/h1></description></item><item><title>设计模式</title><link>https://kingye.me/interview/docs/se/dp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/se/dp/</guid><description>&lt;h1 id="设计模式">
 设计模式
 &lt;a class="anchor" href="#%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f">#&lt;/a>
&lt;/h1>
&lt;h2 id="设计原则">
 设计原则
 &lt;a class="anchor" href="#%e8%ae%be%e8%ae%a1%e5%8e%9f%e5%88%99">#&lt;/a>
&lt;/h2>
&lt;h3 id="单一职责原则-srp">
 单一职责原则 (&lt;code>SRP&lt;/code>)
 &lt;a class="anchor" href="#%e5%8d%95%e4%b8%80%e8%81%8c%e8%b4%a3%e5%8e%9f%e5%88%99-srp">#&lt;/a>
&lt;/h3>
&lt;hr>
&lt;h3 id="开闭原则-open-closed-principle">
 开闭原则 (&lt;code>Open Closed Principle&lt;/code>)
 &lt;a class="anchor" href="#%e5%bc%80%e9%97%ad%e5%8e%9f%e5%88%99-open-closed-principle">#&lt;/a>
&lt;/h3>
&lt;hr>
&lt;h3 id="里氏替换原则-liskov-substitution-principle">
 里氏替换原则 (&lt;code>Liskov Substitution Principle&lt;/code>)
 &lt;a class="anchor" href="#%e9%87%8c%e6%b0%8f%e6%9b%bf%e6%8d%a2%e5%8e%9f%e5%88%99-liskov-substitution-principle">#&lt;/a>
&lt;/h3>
&lt;hr>
&lt;h3 id="依赖倒置原则-dependence-inversion-principle">
 依赖倒置原则 (&lt;code>Dependence Inversion Principle&lt;/code>)
 &lt;a class="anchor" href="#%e4%be%9d%e8%b5%96%e5%80%92%e7%bd%ae%e5%8e%9f%e5%88%99-dependence-inversion-principle">#&lt;/a>
&lt;/h3>
&lt;hr>
&lt;h3 id="接口隔离原则-interface-segregation-principle">
 接口隔离原则 (&lt;code>Interface Segregation Principle&lt;/code>)
 &lt;a class="anchor" href="#%e6%8e%a5%e5%8f%a3%e9%9a%94%e7%a6%bb%e5%8e%9f%e5%88%99-interface-segregation-principle">#&lt;/a>
&lt;/h3>
&lt;hr>
&lt;h3 id="迪米特原则-demeter-principle">
 迪米特原则 (&lt;code>Demeter Principle&lt;/code>)
 &lt;a class="anchor" href="#%e8%bf%aa%e7%b1%b3%e7%89%b9%e5%8e%9f%e5%88%99-demeter-principle">#&lt;/a>
&lt;/h3>
&lt;hr>
&lt;hr>
&lt;h2 id="创建型模式">
 创建型模式
 &lt;a class="anchor" href="#%e5%88%9b%e5%bb%ba%e5%9e%8b%e6%a8%a1%e5%bc%8f">#&lt;/a>
&lt;/h2>
&lt;h3 id="简单工厂模式">
 简单工厂模式
 &lt;a class="anchor" href="#%e7%ae%80%e5%8d%95%e5%b7%a5%e5%8e%82%e6%a8%a1%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;hr>
&lt;h3 id="工厂方法模式">
 工厂方法模式
 &lt;a class="anchor" href="#%e5%b7%a5%e5%8e%82%e6%96%b9%e6%b3%95%e6%a8%a1%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;hr>
&lt;h3 id="抽象工厂模式">
 抽象工厂模式
 &lt;a class="anchor" href="#%e6%8a%bd%e8%b1%a1%e5%b7%a5%e5%8e%82%e6%a8%a1%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;hr>
&lt;h3 id="建造者模式">
 建造者模式
 &lt;a class="anchor" href="#%e5%bb%ba%e9%80%a0%e8%80%85%e6%a8%a1%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;hr>
&lt;h3 id="单例模式">
 单例模式
 &lt;a class="anchor" href="#%e5%8d%95%e4%be%8b%e6%a8%a1%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;hr>
&lt;hr>
&lt;h2 id="结构型模式">
 结构型模式
 &lt;a class="anchor" href="#%e7%bb%93%e6%9e%84%e5%9e%8b%e6%a8%a1%e5%bc%8f">#&lt;/a>
&lt;/h2>
&lt;h3 id="适配器模式">
 适配器模式
 &lt;a class="anchor" href="#%e9%80%82%e9%85%8d%e5%99%a8%e6%a8%a1%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;hr>
&lt;h3 id="桥接模式">
 桥接模式
 &lt;a class="anchor" href="#%e6%a1%a5%e6%8e%a5%e6%a8%a1%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;hr>
&lt;h3 id="装饰模式">
 装饰模式
 &lt;a class="anchor" href="#%e8%a3%85%e9%a5%b0%e6%a8%a1%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;hr>
&lt;h3 id="外观模式">
 外观模式
 &lt;a class="anchor" href="#%e5%a4%96%e8%a7%82%e6%a8%a1%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;hr>
&lt;h3 id="享元模式">
 享元模式
 &lt;a class="anchor" href="#%e4%ba%ab%e5%85%83%e6%a8%a1%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;hr>
&lt;h3 id="代理模式">
 代理模式
 &lt;a class="anchor" href="#%e4%bb%a3%e7%90%86%e6%a8%a1%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;hr>
&lt;h3 id="组合模式">
 组合模式
 &lt;a class="anchor" href="#%e7%bb%84%e5%90%88%e6%a8%a1%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;h3 id="适配器模式装饰模式代理模式有哪些异同">
 适配器模式、装饰模式、代理模式有哪些异同？
 &lt;a class="anchor" href="#%e9%80%82%e9%85%8d%e5%99%a8%e6%a8%a1%e5%bc%8f%e8%a3%85%e9%a5%b0%e6%a8%a1%e5%bc%8f%e4%bb%a3%e7%90%86%e6%a8%a1%e5%bc%8f%e6%9c%89%e5%93%aa%e4%ba%9b%e5%bc%82%e5%90%8c">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>适配器模式
&lt;ul>
&lt;li>适配器模式&lt;strong>实现新接口&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>代理模式
&lt;ul>
&lt;li>代理模式的特点在于&lt;strong>隔离&lt;/strong>，隔离调用类和被调用类的关系，通过一个代理类去调用。&lt;/li>
&lt;li>代理模式是与原对象&lt;strong>实现同一个接口&lt;/strong>&lt;/li>
&lt;li>代理模式一定是自身持有这个对象，不需要从外部传入。而装饰模式的一定是从外部传入。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>装饰器模式
&lt;ul>
&lt;li>原有的不能满足现有的需求，对原有的进行增强。&lt;/li>
&lt;li>装饰器模式特点在于&lt;strong>增强&lt;/strong>，他的特点是被装饰类和所有的装饰类必须实现同一个接口，而且必须持有被装饰的对象，可以无限装饰。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>装饰器模式与代理模式实现原接口&lt;/li>
&lt;li>都持有原对象
&lt;ul>
&lt;li>装饰器模式构造函数&lt;strong>接收老对象&lt;/strong>&lt;/li>
&lt;li>适配器模式与代理模式自己 new 老对象&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * 原接口，需要传入 orderId，时间
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">interface&lt;/span> &lt;span style="color:#a6e22e">SourceOrderApi&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">updateDate&lt;/span>(String orderId, String date, String client);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">SourceOrderApiImpl&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> SourceOrderApi{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">updateDate&lt;/span>(String orderId, String date, String client) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(client&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#e6db74">&amp;#34;已将订单&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>orderId&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#e6db74">&amp;#34;的有效期延长至&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>date);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Test&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SourceOrderApi sourceOrderApi &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> SourceOrderApiImpl();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sourceOrderApi.&lt;span style="color:#a6e22e">updateDate&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;123456&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;2014-10-15&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;user&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * 适配器模式
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">interface&lt;/span> &lt;span style="color:#a6e22e">AppOrderApi&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//只需要传入订单Id即可&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">updateDate&lt;/span>(String orderId, String client);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">AppOrderApiImpl&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> AppOrderApi{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SourceOrderApi sourceOrderApi;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">AppOrderApiImpl&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sourceOrderApi &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> SourceOrderApiImpl();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">updateDate&lt;/span>(String orderId,String client) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//这里适配的方式随意，但是保证是要完全兼容原有的，就是保证调用原有的接口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sourceOrderApi.&lt;span style="color:#a6e22e">updateDate&lt;/span>(orderId, &lt;span style="color:#e6db74">&amp;#34;9999-12-31&amp;#34;&lt;/span>, client);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Test&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AppOrderApi appOrderApi &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> AppOrderApiImpl();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> appOrderApi.&lt;span style="color:#a6e22e">updateDate&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;123456&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;user&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * 代理模式
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">ProxySourceOrderApiImpl&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> SourceOrderApi {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SourceOrderApi sourceOrderApi;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">ProxySourceOrderApiImpl&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sourceOrderApi &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> SourceOrderApiImpl();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">updateDate&lt;/span>(String orderId, String date, String client) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//进行判断，如果是admin则更新否则让其输入账号密码&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;admin&amp;#34;&lt;/span>.&lt;span style="color:#a6e22e">equals&lt;/span>(client)){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sourceOrderApi.&lt;span style="color:#a6e22e">updateDate&lt;/span>(orderId, date, client);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }&lt;span style="color:#66d9ef">else&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;账号不是admin，没有查询权限，请输入以admin操作&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * 装饰器模式
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">NewSourceOrderApiImpl&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> SourceOrderApi {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SourceOrderApi sourceOrderApi;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">NewSourceOrderApiImpl&lt;/span>(SourceOrderApi sourceOrderApi){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">sourceOrderApi&lt;/span> &lt;span style="color:#f92672">=&lt;/span> sourceOrderApi;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">updateDate&lt;/span>(String orderId, String date, String client) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sourceOrderApi.&lt;span style="color:#a6e22e">updateDate&lt;/span>(orderId, date, client);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(client&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#e6db74">&amp;#34;已将订单&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>orderId&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#e6db74">&amp;#34;的退款期延长至&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>date);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;hr>
&lt;h2 id="行为型模式">
 行为型模式
 &lt;a class="anchor" href="#%e8%a1%8c%e4%b8%ba%e5%9e%8b%e6%a8%a1%e5%bc%8f">#&lt;/a>
&lt;/h2>
&lt;h3 id="命令模式">
 命令模式
 &lt;a class="anchor" href="#%e5%91%bd%e4%bb%a4%e6%a8%a1%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;hr>
&lt;h3 id="中介者模式">
 中介者模式
 &lt;a class="anchor" href="#%e4%b8%ad%e4%bb%8b%e8%80%85%e6%a8%a1%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;hr>
&lt;h3 id="观察者模式">
 观察者模式
 &lt;a class="anchor" href="#%e8%a7%82%e5%af%9f%e8%80%85%e6%a8%a1%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;hr>
&lt;h3 id="状态模式">
 状态模式
 &lt;a class="anchor" href="#%e7%8a%b6%e6%80%81%e6%a8%a1%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;hr>
&lt;h3 id="策略模式">
 策略模式
 &lt;a class="anchor" href="#%e7%ad%96%e7%95%a5%e6%a8%a1%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;hr>
&lt;h3 id="模板方法模式">
 模板方法模式
 &lt;a class="anchor" href="#%e6%a8%a1%e6%9d%bf%e6%96%b9%e6%b3%95%e6%a8%a1%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;hr>
&lt;h3 id="迭代子模式">
 迭代子模式
 &lt;a class="anchor" href="#%e8%bf%ad%e4%bb%a3%e5%ad%90%e6%a8%a1%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;hr>
&lt;h3 id="责任链模式">
 责任链模式
 &lt;a class="anchor" href="#%e8%b4%a3%e4%bb%bb%e9%93%be%e6%a8%a1%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;hr>
&lt;h3 id="备忘录模式">
 备忘录模式
 &lt;a class="anchor" href="#%e5%a4%87%e5%bf%98%e5%bd%95%e6%a8%a1%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;hr>
&lt;h3 id="访问者模式">
 访问者模式
 &lt;a class="anchor" href="#%e8%ae%bf%e9%97%ae%e8%80%85%e6%a8%a1%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;hr>
&lt;h3 id="解释器模式">
 解释器模式
 &lt;a class="anchor" href="#%e8%a7%a3%e9%87%8a%e5%99%a8%e6%a8%a1%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;hr>
&lt;hr>
&lt;h2 id="其他模式">
 其他模式
 &lt;a class="anchor" href="#%e5%85%b6%e4%bb%96%e6%a8%a1%e5%bc%8f">#&lt;/a>
&lt;/h2>
&lt;h3 id="并发型模式">
 并发型模式
 &lt;a class="anchor" href="#%e5%b9%b6%e5%8f%91%e5%9e%8b%e6%a8%a1%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;hr>
&lt;h3 id="线程池模式">
 线程池模式
 &lt;a class="anchor" href="#%e7%ba%bf%e7%a8%8b%e6%b1%a0%e6%a8%a1%e5%bc%8f">#&lt;/a>
&lt;/h3></description></item><item><title>配置热加载</title><link>https://kingye.me/interview/docs/backend/others/hot-load/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/backend/others/hot-load/</guid><description>&lt;h1 id="配置热加载">
 配置热加载
 &lt;a class="anchor" href="#%e9%85%8d%e7%bd%ae%e7%83%ad%e5%8a%a0%e8%bd%bd">#&lt;/a>
&lt;/h1></description></item><item><title>链表</title><link>https://kingye.me/interview/docs/algs/link/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/algs/link/</guid><description>&lt;h1 id="链表">
 链表
 &lt;a class="anchor" href="#%e9%93%be%e8%a1%a8">#&lt;/a>
&lt;/h1></description></item><item><title>C++</title><link>https://kingye.me/interview/docs/pl/cpp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/pl/cpp/</guid><description>&lt;h1 id="c">
 C++
 &lt;a class="anchor" href="#c">#&lt;/a>
&lt;/h1>
&lt;blockquote class="book-hint info">
 &lt;p>更多教程详见：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://kingye.me/study-cpp/">C++ 学习笔记&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/huihut/interview">huihut/interview&lt;/a> &lt;img src="https://img.shields.io/github/stars/huihut/interview.svg" alt="Github stars" /> &lt;img src="https://img.shields.io/github/languages/top/huihut/interview.svg" alt="Language" /> &lt;img src="https://img.shields.io/github/v/tag/huihut/interview.svg?sort=semver" alt="Last Tag" /> &lt;img src="https://img.shields.io/github/last-commit/huihut/interview.svg" alt="Last commit" />&lt;/li>
&lt;/ul>
&lt;/blockquote>

&lt;h2 id="基础">
 基础
 &lt;a class="anchor" href="#%e5%9f%ba%e7%a1%80">#&lt;/a>
&lt;/h2>
&lt;hr>
&lt;hr>
&lt;h2 id="进阶">
 进阶
 &lt;a class="anchor" href="#%e8%bf%9b%e9%98%b6">#&lt;/a>
&lt;/h2>
&lt;hr>
&lt;hr>
&lt;h2 id="设计与实现">
 设计与实现
 &lt;a class="anchor" href="#%e8%ae%be%e8%ae%a1%e4%b8%8e%e5%ae%9e%e7%8e%b0">#&lt;/a>
&lt;/h2></description></item><item><title>CSRF</title><link>https://kingye.me/interview/docs/security/web/csrf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/security/web/csrf/</guid><description>&lt;h1 id="csrf">
 CSRF
 &lt;a class="anchor" href="#csrf">#&lt;/a>
&lt;/h1>
&lt;h2 id="什么是-csrf为什么会发生-csrf">
 什么是 CSRF，为什么会发生 CSRF？
 &lt;a class="anchor" href="#%e4%bb%80%e4%b9%88%e6%98%af-csrf%e4%b8%ba%e4%bb%80%e4%b9%88%e4%bc%9a%e5%8f%91%e7%94%9f-csrf">#&lt;/a>
&lt;/h2>
&lt;hr>
&lt;h2 id="有哪些-csrf-攻击方法">
 有哪些 CSRF 攻击方法？
 &lt;a class="anchor" href="#%e6%9c%89%e5%93%aa%e4%ba%9b-csrf-%e6%94%bb%e5%87%bb%e6%96%b9%e6%b3%95">#&lt;/a>
&lt;/h2>
&lt;hr>
&lt;h2 id="如何防止-csrf-攻击">
 如何防止 CSRF 攻击？
 &lt;a class="anchor" href="#%e5%a6%82%e4%bd%95%e9%98%b2%e6%ad%a2-csrf-%e6%94%bb%e5%87%bb">#&lt;/a>
&lt;/h2></description></item><item><title>Java Web 后端</title><link>https://kingye.me/interview/docs/backend/web/java/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/backend/web/java/</guid><description>&lt;h1 id="java-web-后端">
 Java Web 后端
 &lt;a class="anchor" href="#java-web-%e5%90%8e%e7%ab%af">#&lt;/a>
&lt;/h1>
&lt;h2 id="spring">
 Spring
 &lt;a class="anchor" href="#spring">#&lt;/a>
&lt;/h2></description></item><item><title>Kubernetes</title><link>https://kingye.me/interview/docs/cloud/kubernetes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/cloud/kubernetes/</guid><description>&lt;h1 id="kubernetes">
 Kubernetes
 &lt;a class="anchor" href="#kubernetes">#&lt;/a>
&lt;/h1>
&lt;p>更多内容见：&lt;a href="https://kingye.me/interview/study-kubernetes/" target="_blank">Kubernetes 学习笔记&lt;/a>&lt;/p>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.qikqiak.com/post/k8s-api-resources-group-and-version/">Kubernetes API 资源使用 - 应该使用哪个 Group 和 Version?&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="端口">
 端口
 &lt;a class="anchor" href="#%e7%ab%af%e5%8f%a3">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;code>containerPort&lt;/code>：在容器上，用于被 pod 绑定，是可选的，仅仅是提示信息，容器中任何监听 &lt;code>0.0.0.0&lt;/code> 的端口，都会暴露出来
&lt;ul>
&lt;li>是可选的，仅仅是提示信息&lt;/li>
&lt;li>容器中任何监听 &lt;code>0.0.0.0&lt;/code> 的端口，都会暴露出来&lt;/li>
&lt;li>无法被更新
&lt;img src="https://cdn.jsdelivr.net/gh/ikingye/imagehost/picgo/20200918141459.png" alt="" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>targetPort&lt;/code>：在 pod 上，从 port 和 nodePort 上来的流量，经过 kube-proxy 流入到后端 pod 的 targetPort 上，最后进入容器
&lt;ul>
&lt;li>targetPort 和 containerPort 是一致的
&lt;blockquote>
&lt;p>targetPort and containerPort must be identical most of the time because whatever port is open for your application in a container that would be the same port you will wish to send traffic from service via targetPort.&lt;/p></description></item><item><title>Redis</title><link>https://kingye.me/interview/docs/backend/db/redis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/backend/db/redis/</guid><description>&lt;h1 id="redis">
 Redis
 &lt;a class="anchor" href="#redis">#&lt;/a>
&lt;/h1>
&lt;h2 id="redis-有哪些数据结构分别适用什么场景">
 Redis 有哪些数据结构，分别适用什么场景？
 &lt;a class="anchor" href="#redis-%e6%9c%89%e5%93%aa%e4%ba%9b%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84%e5%88%86%e5%88%ab%e9%80%82%e7%94%a8%e4%bb%80%e4%b9%88%e5%9c%ba%e6%99%af">#&lt;/a>
&lt;/h2>
&lt;hr>
&lt;h2 id="redis-数据结构是如何实现的">
 Redis 数据结构是如何实现的？
 &lt;a class="anchor" href="#redis-%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84%e6%98%af%e5%a6%82%e4%bd%95%e5%ae%9e%e7%8e%b0%e7%9a%84">#&lt;/a>
&lt;/h2>
&lt;hr>
&lt;h2 id="redis-如何做持久化">
 Redis 如何做持久化？
 &lt;a class="anchor" href="#redis-%e5%a6%82%e4%bd%95%e5%81%9a%e6%8c%81%e4%b9%85%e5%8c%96">#&lt;/a>
&lt;/h2>
&lt;h3 id="rdb">
 RDB
 &lt;a class="anchor" href="#rdb">#&lt;/a>
&lt;/h3>
&lt;p>在指定的时间间隔能对你的数据进行快照存储&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 时间策略&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>save &lt;span style="color:#ae81ff">900&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>save &lt;span style="color:#ae81ff">300&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>save &lt;span style="color:#ae81ff">60&lt;/span> &lt;span style="color:#ae81ff">10000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 文件名称&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dbfilename dump.rdb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 文件保存路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dir /home/work/app/redis/data/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 如果持久化出错，主进程是否停止写入&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>stop-writes-on-bgsave-error yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 是否压缩&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rdbcompression yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 导入时是否检查&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rdbchecksum yes
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="aof">
 AOF
 &lt;a class="anchor" href="#aof">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 是否开启aof&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>appendonly yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 文件名称&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>appendfilename &lt;span style="color:#e6db74">&amp;#34;appendonly.aof&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 同步方式&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>appendfsync everysec
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># aof重写期间是否同步&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>no-appendfsync-on-rewrite no
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 重写触发配置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>auto-aof-rewrite-percentage &lt;span style="color:#ae81ff">100&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>auto-aof-rewrite-min-size 64mb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 加载aof时如果有错如何处理&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aof-load-truncated yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 文件重写策略&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aof-rewrite-incremental-fsync yes
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="redis-是单进程单线程这么设计有什么优点">
 Redis 是单进程单线程，这么设计有什么优点？
 &lt;a class="anchor" href="#redis-%e6%98%af%e5%8d%95%e8%bf%9b%e7%a8%8b%e5%8d%95%e7%ba%bf%e7%a8%8b%e8%bf%99%e4%b9%88%e8%ae%be%e8%ae%a1%e6%9c%89%e4%bb%80%e4%b9%88%e4%bc%98%e7%82%b9">#&lt;/a>
&lt;/h2></description></item><item><title>RocketMQ</title><link>https://kingye.me/interview/docs/backend/mq/rocketmq/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/backend/mq/rocketmq/</guid><description>&lt;h1 id="rocketmq">
 RocketMQ
 &lt;a class="anchor" href="#rocketmq">#&lt;/a>
&lt;/h1></description></item><item><title>加密</title><link>https://kingye.me/interview/docs/others/encryption/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/others/encryption/</guid><description>&lt;h1 id="加密">
 加密
 &lt;a class="anchor" href="#%e5%8a%a0%e5%af%86">#&lt;/a>
&lt;/h1>
&lt;h2 id="ssltls">
 SSL/TLS
 &lt;a class="anchor" href="#ssltls">#&lt;/a>
&lt;/h2>
&lt;h3 id="tls-握手流程是什么样的">
 TLS 握手流程是什么样的？
 &lt;a class="anchor" href="#tls-%e6%8f%a1%e6%89%8b%e6%b5%81%e7%a8%8b%e6%98%af%e4%bb%80%e4%b9%88%e6%a0%b7%e7%9a%84">#&lt;/a>
&lt;/h3>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://blog.wangriyu.wang/2018/03-http-tls.html">SSL/TLS 详解&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>架构设计</title><link>https://kingye.me/interview/docs/se/architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/se/architecture/</guid><description>&lt;h1 id="架构设计">
 架构设计
 &lt;a class="anchor" href="#%e6%9e%b6%e6%9e%84%e8%ae%be%e8%ae%a1">#&lt;/a>
&lt;/h1>
&lt;h2 id="架构设计原则">
 架构设计原则
 &lt;a class="anchor" href="#%e6%9e%b6%e6%9e%84%e8%ae%be%e8%ae%a1%e5%8e%9f%e5%88%99">#&lt;/a>
&lt;/h2>
&lt;h3 id="cap-consistency-availability-partition-tolerance">
 CAP (&lt;code>Consistency&lt;/code>, &lt;code>Availability&lt;/code>, &lt;code>Partition tolerance&lt;/code>)
 &lt;a class="anchor" href="#cap-consistency-availability-partition-tolerance">#&lt;/a>
&lt;/h3>
&lt;h4 id="如何理解-cap你在做系统设计时是如何取舍的">
 如何理解 CAP，你在做系统设计时是如何取舍的？
 &lt;a class="anchor" href="#%e5%a6%82%e4%bd%95%e7%90%86%e8%a7%a3-cap%e4%bd%a0%e5%9c%a8%e5%81%9a%e7%b3%bb%e7%bb%9f%e8%ae%be%e8%ae%a1%e6%97%b6%e6%98%af%e5%a6%82%e4%bd%95%e5%8f%96%e8%88%8d%e7%9a%84">#&lt;/a>
&lt;/h4>
&lt;hr>
&lt;h3 id="acid-atomicity-consistency-isolation-durability">
 ACID (&lt;code>Atomicity&lt;/code>, &lt;code>Consistency&lt;/code>, &lt;code>Isolation&lt;/code>, &lt;code>Durability&lt;/code>)
 &lt;a class="anchor" href="#acid-atomicity-consistency-isolation-durability">#&lt;/a>
&lt;/h3>
&lt;p>&lt;code>ACID&lt;/code> 是追求 &lt;code>CAP&lt;/code> 的一致性 (&lt;code>C&lt;/code>)&lt;/p>
&lt;hr>
&lt;h3 id="base-basically-available-soft-state-eventual-consistency">
 BASE (&lt;code>Basically Available&lt;/code>, &lt;code>Soft state&lt;/code>, &lt;code>Eventual consistency&lt;/code>)
 &lt;a class="anchor" href="#base-basically-available-soft-state-eventual-consistency">#&lt;/a>
&lt;/h3>
&lt;p>&lt;code>BASE&lt;/code> 是追求 &lt;code>CAP&lt;/code> 的可用性 (&lt;code>A&lt;/code>)&lt;/p>
&lt;hr>
&lt;hr>
&lt;h2 id="高性能">
 高性能
 &lt;a class="anchor" href="#%e9%ab%98%e6%80%a7%e8%83%bd">#&lt;/a>
&lt;/h2>
&lt;hr>
&lt;hr>
&lt;h2 id="高可用">
 高可用
 &lt;a class="anchor" href="#%e9%ab%98%e5%8f%af%e7%94%a8">#&lt;/a>
&lt;/h2>
&lt;hr>
&lt;hr>
&lt;h2 id="高并发">
 高并发
 &lt;a class="anchor" href="#%e9%ab%98%e5%b9%b6%e5%8f%91">#&lt;/a>
&lt;/h2>
&lt;hr>
&lt;hr>
&lt;h2 id="高扩展性">
 高扩展性
 &lt;a class="anchor" href="#%e9%ab%98%e6%89%a9%e5%b1%95%e6%80%a7">#&lt;/a>
&lt;/h2></description></item><item><title>程序热重启</title><link>https://kingye.me/interview/docs/backend/others/hot-restart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/backend/others/hot-restart/</guid><description>&lt;h1 id="程序热重启">
 程序热重启
 &lt;a class="anchor" href="#%e7%a8%8b%e5%ba%8f%e7%83%ad%e9%87%8d%e5%90%af">#&lt;/a>
&lt;/h1>
&lt;h2 id="程序如何优雅退出">
 程序如何优雅退出？
 &lt;a class="anchor" href="#%e7%a8%8b%e5%ba%8f%e5%a6%82%e4%bd%95%e4%bc%98%e9%9b%85%e9%80%80%e5%87%ba">#&lt;/a>
&lt;/h2>
&lt;h3 id="linux-信号">
 Linux 信号
 &lt;a class="anchor" href="#linux-%e4%bf%a1%e5%8f%b7">#&lt;/a>
&lt;/h3>
&lt;p>信号是进程间通信的底层形式。&lt;/p>
&lt;p>Linux 有标准信号 32 个，从 32-63 的信号是&lt;strong>实时&lt;/strong>信号。&lt;/p>
&lt;p>发送信号的原因：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>硬件异常：如 0 作为除数，内核会发送 SIGFPE（信号值 8）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>软件异常：如进程终止时，内核会给父进程发送 SIGCHLE（信号值 17），窗口大小调整，应用程序会收到 SIGWINCH（信号值 28）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>SIGINT&lt;/code> 2&lt;/p>
&lt;ul>
&lt;li>&lt;code>ctrl + C&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>SIGQUIT&lt;/code> 3&lt;/p>
&lt;ul>
&lt;li>&lt;code>ctrl + \&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>SIGKILL&lt;/code> 9&lt;/p>
&lt;ul>
&lt;li>&lt;strong>不可以&lt;/strong>被阻塞、处理和忽略&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>SIGTERM&lt;/code> 15&lt;/p>
&lt;ul>
&lt;li>&lt;code>kill&lt;/code> 默认不带参数，发送的信号就是 &lt;code>SIGTERM&lt;/code>&lt;/li>
&lt;li>可以被阻塞、处理和忽略&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>SIGTOP&lt;/code> 20&lt;/p>
&lt;ul>
&lt;li>停止（挂起）进程 &lt;code>ctrl + D&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>




&lt;div class="book-tabs">&lt;input type="radio" class="toggle" name="tabs-graceful exit" id="tabs-graceful exit-0" checked="checked" />
 &lt;label for="tabs-graceful exit-0">Go&lt;/label>
 &lt;div class="book-tabs-content markdown-inner">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">sigs&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> make(&lt;span style="color:#66d9ef">chan&lt;/span> &lt;span style="color:#a6e22e">os&lt;/span>.&lt;span style="color:#a6e22e">Signal&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">signal&lt;/span>.&lt;span style="color:#a6e22e">Notify&lt;/span>(&lt;span style="color:#a6e22e">sigs&lt;/span>, &lt;span style="color:#a6e22e">syscall&lt;/span>.&lt;span style="color:#a6e22e">SIGINT&lt;/span>, &lt;span style="color:#a6e22e">syscall&lt;/span>.&lt;span style="color:#a6e22e">SIGTERM&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;awaiting signal&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;-&lt;/span>&lt;span style="color:#a6e22e">sigs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;exiting&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;input type="radio" class="toggle" name="tabs-graceful exit" id="tabs-graceful exit-1" />
 &lt;label for="tabs-graceful exit-1">Java&lt;/label>
 &lt;div class="book-tabs-content markdown-inner">&lt;/div>&lt;input type="radio" class="toggle" name="tabs-graceful exit" id="tabs-graceful exit-2" />
 &lt;label for="tabs-graceful exit-2">Python&lt;/label>
 &lt;div class="book-tabs-content markdown-inner">&lt;/div>&lt;/div>

&lt;hr>
&lt;h2 id="如何实现热重启的">
 如何实现热重启的？
 &lt;a class="anchor" href="#%e5%a6%82%e4%bd%95%e5%ae%9e%e7%8e%b0%e7%83%ad%e9%87%8d%e5%90%af%e7%9a%84">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>服务端启动时多开启一个协程用来监听关闭信号&lt;/li>
&lt;li>当协程接收到关闭信号时，将拒绝接收新的连接，并处理好当前所有连接后断开&lt;/li>
&lt;li>启动一个新的服务端&lt;strong>进程&lt;/strong>来接管新的连接&lt;/li>
&lt;li>关闭当前&lt;strong>进程&lt;/strong>&lt;/li>
&lt;/ol>




&lt;div class="book-tabs">&lt;input type="radio" class="toggle" name="tabs-graceful restart" id="tabs-graceful restart-0" checked="checked" />
 &lt;label for="tabs-graceful restart-0">Go&lt;/label>
 &lt;div class="book-tabs-content markdown-inner">&lt;h3 id="go-程序优雅关闭与重启">
 Go 程序优雅关闭与重启
 &lt;a class="anchor" href="#go-%e7%a8%8b%e5%ba%8f%e4%bc%98%e9%9b%85%e5%85%b3%e9%97%ad%e4%b8%8e%e9%87%8d%e5%90%af">#&lt;/a>
&lt;/h3>
&lt;p>参考：&lt;/p></description></item><item><title>PHP 后端</title><link>https://kingye.me/interview/docs/backend/web/php/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/backend/web/php/</guid><description>&lt;h1 id="php-后端">
 PHP 后端
 &lt;a class="anchor" href="#php-%e5%90%8e%e7%ab%af">#&lt;/a>
&lt;/h1></description></item><item><title>RabbitMQ</title><link>https://kingye.me/interview/docs/backend/mq/rabbitmq/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/backend/mq/rabbitmq/</guid><description>&lt;h1 id="rabbitmq">
 RabbitMQ
 &lt;a class="anchor" href="#rabbitmq">#&lt;/a>
&lt;/h1></description></item><item><title>编译</title><link>https://kingye.me/interview/docs/others/compile/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/others/compile/</guid><description>&lt;h1 id="编译">
 编译
 &lt;a class="anchor" href="#%e7%bc%96%e8%af%91">#&lt;/a>
&lt;/h1></description></item><item><title>Go</title><link>https://kingye.me/interview/docs/pl/go/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/pl/go/</guid><description>&lt;h1 id="go">
 Go
 &lt;a class="anchor" href="#go">#&lt;/a>
&lt;/h1>
&lt;blockquote class="book-hint info">
 &lt;p>更多教程详见：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://kingye.me/study-go/">Go 学习笔记&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/shgopher/GOFamily">shgopher/GOFamily&lt;/a> &lt;img src="https://img.shields.io/github/stars/shgopher/GOFamily.svg" alt="Github stars" /> &lt;img src="https://img.shields.io/github/languages/top/shgopher/GOFamily.svg" alt="Language" /> &lt;img src="https://img.shields.io/github/v/tag/shgopher/GOFamily.svg?sort=semver" alt="Last Tag" /> &lt;img src="https://img.shields.io/github/last-commit/shgopher/GOFamily.svg" alt="Last commit" />&lt;/li>
&lt;li>&lt;a href="https://github.com/geektutu/interview-questions">geektutu/interview-questions&lt;/a> &lt;img src="https://img.shields.io/github/stars/geektutu/interview-questions.svg" alt="Github stars" /> &lt;img src="https://img.shields.io/github/languages/top/geektutu/interview-questions.svg" alt="Language" /> &lt;img src="https://img.shields.io/github/v/tag/geektutu/interview-questions.svg?sort=semver" alt="Last Tag" /> &lt;img src="https://img.shields.io/github/last-commit/geektutu/interview-questions.svg" alt="Last commit" />&lt;/li>
&lt;/ul>
&lt;/blockquote>

&lt;h2 id="基础">
 基础
 &lt;a class="anchor" href="#%e5%9f%ba%e7%a1%80">#&lt;/a>
&lt;/h2>
&lt;h3 id="接口">
 接口
 &lt;a class="anchor" href="#%e6%8e%a5%e5%8f%a3">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>如果一个类型使用 &lt;code>value receiver&lt;/code> 实现了某个 interface 的所有方法，那么这个类型的 &lt;strong>value 和 pointer&lt;/strong> 都实现了该 interface&lt;/li>
&lt;li>如果一个类型使用 &lt;code>pointer receiver&lt;/code> 实现了某个 interface 的所有方法，那么这个类型只有 &lt;strong>pointer&lt;/strong> 都实现了该 interface&lt;/li>
&lt;/ul>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://golangbyexample.com/pointer-vs-value-receiver-method-golang/">Pointer vs Value Receiver in methods while implementing an interface in Go&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="标准库">
 标准库
 &lt;a class="anchor" href="#%e6%a0%87%e5%87%86%e5%ba%93">#&lt;/a>
&lt;/h3>
&lt;h4 id="为什么需要-responsebodyclose">
 为什么需要 &lt;code>response.Body.Close()&lt;/code>？
 &lt;a class="anchor" href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e9%9c%80%e8%a6%81-responsebodyclose">#&lt;/a>
&lt;/h4>
&lt;p>为了 TCP 连接复用&lt;/p></description></item><item><title>Python 后端</title><link>https://kingye.me/interview/docs/backend/web/python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/backend/web/python/</guid><description>&lt;h1 id="python-后端">
 Python 后端
 &lt;a class="anchor" href="#python-%e5%90%8e%e7%ab%af">#&lt;/a>
&lt;/h1></description></item><item><title>Cloud Native</title><link>https://kingye.me/interview/docs/cloud/native/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/cloud/native/</guid><description>&lt;h1 id="cloud-native">
 Cloud Native
 &lt;a class="anchor" href="#cloud-native">#&lt;/a>
&lt;/h1></description></item><item><title>Java</title><link>https://kingye.me/interview/docs/pl/java/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/pl/java/</guid><description>&lt;h1 id="java">
 Java
 &lt;a class="anchor" href="#java">#&lt;/a>
&lt;/h1>
&lt;blockquote class="book-hint info">
 &lt;p>更多教程详见：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://kingye.me/study-java/">Java 学习笔记&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/Snailclimb/JavaGuide">Snailclimb/JavaGuide&lt;/a> &lt;img src="https://img.shields.io/github/stars/Snailclimb/JavaGuide.svg" alt="Github stars" /> &lt;img src="https://img.shields.io/github/languages/top/Snailclimb/JavaGuide.svg" alt="Language" /> &lt;img src="https://img.shields.io/github/v/tag/Snailclimb/JavaGuide.svg?sort=semver" alt="Last Tag" /> &lt;img src="https://img.shields.io/github/last-commit/Snailclimb/JavaGuide.svg" alt="Last commit" />&lt;/li>
&lt;/ul>
&lt;/blockquote>

&lt;h2 id="基础">
 基础
 &lt;a class="anchor" href="#%e5%9f%ba%e7%a1%80">#&lt;/a>
&lt;/h2>
&lt;hr>
&lt;hr>
&lt;h2 id="进阶">
 进阶
 &lt;a class="anchor" href="#%e8%bf%9b%e9%98%b6">#&lt;/a>
&lt;/h2>
&lt;hr>
&lt;hr>
&lt;h2 id="设计与实现">
 设计与实现
 &lt;a class="anchor" href="#%e8%ae%be%e8%ae%a1%e4%b8%8e%e5%ae%9e%e7%8e%b0">#&lt;/a>
&lt;/h2></description></item><item><title>JavaScript</title><link>https://kingye.me/interview/docs/pl/javascript/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/pl/javascript/</guid><description>&lt;h1 id="javascript">
 JavaScript
 &lt;a class="anchor" href="#javascript">#&lt;/a>
&lt;/h1>
&lt;blockquote class="book-hint info">
 更多教程详见：&lt;a href="https://kingye.me/study-javascript/">JavaScript 学习笔记&lt;/a>
&lt;/blockquote>

&lt;h2 id="基础">
 基础
 &lt;a class="anchor" href="#%e5%9f%ba%e7%a1%80">#&lt;/a>
&lt;/h2>
&lt;hr>
&lt;hr>
&lt;h2 id="进阶">
 进阶
 &lt;a class="anchor" href="#%e8%bf%9b%e9%98%b6">#&lt;/a>
&lt;/h2>
&lt;hr>
&lt;hr>
&lt;h2 id="设计与实现">
 设计与实现
 &lt;a class="anchor" href="#%e8%ae%be%e8%ae%a1%e4%b8%8e%e5%ae%9e%e7%8e%b0">#&lt;/a>
&lt;/h2></description></item><item><title>Kotlin</title><link>https://kingye.me/interview/docs/pl/kotlin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/pl/kotlin/</guid><description>&lt;h1 id="kotlin">
 Kotlin
 &lt;a class="anchor" href="#kotlin">#&lt;/a>
&lt;/h1>
&lt;blockquote class="book-hint info">
 更多教程详见：&lt;a href="https://kingye.me/study-kotlin/">Kotlin 学习笔记&lt;/a>
&lt;/blockquote>

&lt;h2 id="基础">
 基础
 &lt;a class="anchor" href="#%e5%9f%ba%e7%a1%80">#&lt;/a>
&lt;/h2>
&lt;hr>
&lt;hr>
&lt;h2 id="进阶">
 进阶
 &lt;a class="anchor" href="#%e8%bf%9b%e9%98%b6">#&lt;/a>
&lt;/h2>
&lt;hr>
&lt;hr>
&lt;h2 id="设计与实现">
 设计与实现
 &lt;a class="anchor" href="#%e8%ae%be%e8%ae%a1%e4%b8%8e%e5%ae%9e%e7%8e%b0">#&lt;/a>
&lt;/h2></description></item><item><title>PHP</title><link>https://kingye.me/interview/docs/pl/php/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/pl/php/</guid><description>&lt;h1 id="php">
 PHP
 &lt;a class="anchor" href="#php">#&lt;/a>
&lt;/h1>
&lt;blockquote class="book-hint info">
 &lt;p>更多教程详见：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://kingye.me/study-php/">PHP 学习笔记&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/colinlet/PHP-Interview-QA">colinlet/PHP-Interview-QA&lt;/a> &lt;img src="https://img.shields.io/github/stars/colinlet/PHP-Interview-QA.svg" alt="Github stars" /> &lt;img src="https://img.shields.io/github/languages/top/colinlet/PHP-Interview-QA.svg" alt="Language" /> &lt;img src="https://img.shields.io/github/v/tag/colinlet/PHP-Interview-QA.svg?sort=semver" alt="Last Tag" /> &lt;img src="https://img.shields.io/github/last-commit/colinlet/PHP-Interview-QA.svg" alt="Last commit" />&lt;/li>
&lt;/ul>
&lt;/blockquote>

&lt;h2 id="基础">
 基础
 &lt;a class="anchor" href="#%e5%9f%ba%e7%a1%80">#&lt;/a>
&lt;/h2>
&lt;hr>
&lt;hr>
&lt;h2 id="进阶">
 进阶
 &lt;a class="anchor" href="#%e8%bf%9b%e9%98%b6">#&lt;/a>
&lt;/h2>
&lt;hr>
&lt;hr>
&lt;h2 id="设计与实现">
 设计与实现
 &lt;a class="anchor" href="#%e8%ae%be%e8%ae%a1%e4%b8%8e%e5%ae%9e%e7%8e%b0">#&lt;/a>
&lt;/h2></description></item><item><title>Python</title><link>https://kingye.me/interview/docs/pl/python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/pl/python/</guid><description>&lt;h1 id="python">
 Python
 &lt;a class="anchor" href="#python">#&lt;/a>
&lt;/h1>
&lt;blockquote class="book-hint info">
 &lt;p>更多教程详见：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://kingye.me/study-python/">Python 学习笔记&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/taizilongxu/interview_python">taizilongxu/interview_python&lt;/a> &lt;img src="https://img.shields.io/github/stars/taizilongxu/interview_python.svg" alt="Github stars" /> &lt;img src="https://img.shields.io/github/languages/top/taizilongxu/interview_python.svg" alt="Language" /> &lt;img src="https://img.shields.io/github/v/tag/taizilongxu/interview_python.svg?sort=semver" alt="Last Tag" /> &lt;img src="https://img.shields.io/github/last-commit/taizilongxu/interview_python.svg" alt="Last commit" />&lt;/li>
&lt;li>&lt;a href="https://github.com/kenwoodjw/python_interview_question">kenwoodjw/python_interview_question&lt;/a> &lt;img src="https://img.shields.io/github/stars/kenwoodjw/python_interview_question.svg" alt="Github stars" /> &lt;img src="https://img.shields.io/github/languages/top/kenwoodjw/python_interview_question.svg" alt="Language" /> &lt;img src="https://img.shields.io/github/v/tag/kenwoodjw/python_interview_question.svg?sort=semver" alt="Last Tag" /> &lt;img src="https://img.shields.io/github/last-commit/kenwoodjw/python_interview_question.svg" alt="Last commit" />&lt;/li>
&lt;/ul>
&lt;/blockquote>

&lt;h2 id="基础">
 基础
 &lt;a class="anchor" href="#%e5%9f%ba%e7%a1%80">#&lt;/a>
&lt;/h2>
&lt;hr>
&lt;hr>
&lt;h2 id="进阶">
 进阶
 &lt;a class="anchor" href="#%e8%bf%9b%e9%98%b6">#&lt;/a>
&lt;/h2>
&lt;hr>
&lt;hr>
&lt;h2 id="设计与实现">
 设计与实现
 &lt;a class="anchor" href="#%e8%ae%be%e8%ae%a1%e4%b8%8e%e5%ae%9e%e7%8e%b0">#&lt;/a>
&lt;/h2></description></item><item><title>Rust</title><link>https://kingye.me/interview/docs/pl/rust/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/interview/docs/pl/rust/</guid><description>&lt;h1 id="rust">
 Rust
 &lt;a class="anchor" href="#rust">#&lt;/a>
&lt;/h1>
&lt;blockquote class="book-hint info">
 更多教程详见：&lt;a href="https://kingye.me/study-rust/">Rust 学习笔记&lt;/a>
&lt;/blockquote>

&lt;h2 id="基础">
 基础
 &lt;a class="anchor" href="#%e5%9f%ba%e7%a1%80">#&lt;/a>
&lt;/h2>
&lt;hr>
&lt;hr>
&lt;h2 id="进阶">
 进阶
 &lt;a class="anchor" href="#%e8%bf%9b%e9%98%b6">#&lt;/a>
&lt;/h2>
&lt;hr>
&lt;hr>
&lt;h2 id="设计与实现">
 设计与实现
 &lt;a class="anchor" href="#%e8%ae%be%e8%ae%a1%e4%b8%8e%e5%ae%9e%e7%8e%b0">#&lt;/a>
&lt;/h2></description></item></channel></rss>