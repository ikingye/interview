<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>7. 云计算 on 面试笔记</title>
    <link>https://ikingye.github.io/interview/docs/cloud/</link>
    <description>Recent content in 7. 云计算 on 面试笔记</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://ikingye.github.io/interview/docs/cloud/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker</title>
      <link>https://ikingye.github.io/interview/docs/cloud/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/interview/docs/cloud/docker/</guid>
      <description>Docker #  更多内容见：Docker 学习笔记
entrypoint vs cmd #    ENTRYPOINT 或者 CMD 命令会覆盖之前的 ENTRYPOINT 或者 CMD 命令
  docker run 可以覆盖 ENTRYPOINT 或者 CMD
 docker run demo cmd  CMD 更容易进行覆盖   docker run --entrypoint cmd demo    ENTRYPOINT 和 CMD 同时存在时，docker 把 CMD 的命令拼接到 ENTRYPOINT 命令之后，拼接后的命令才是最终执行的命令
  Kubernetes
 如果容器没有设置 command 和 args，则使用 docker 镜像自带的命令和参数 如果容器设置了 command（不管有没有设置 args），则 docker 镜像自带命令和参数被忽略 如果容器设置了 args，没有设置 command，则 docker 镜像自带的命令会使用该新参数 Docker 与 Kubernetes 中对应的字段名称。    描述 Docker 字段名称 Kubernetes 字段名称     容器执行的命令 Entrypoint command   传给命令的参数 Cmd args      参考：为容器设置启动时要执行的命令和参数</description>
    </item>
    
    <item>
      <title>Kubernetes</title>
      <link>https://ikingye.github.io/interview/docs/cloud/kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/interview/docs/cloud/kubernetes/</guid>
      <description>Kubernetes #  更多内容见：Kubernetes 学习笔记
参考：
 Kubernetes API 资源使用 - 应该使用哪个 Group 和 Version?  端口 #   containerPort：在容器上，用于被 pod 绑定，是可选的，仅仅是提示信息，容器中任何监听 0.0.0.0 的端口，都会暴露出来  是可选的，仅仅是提示信息 容器中任何监听 0.0.0.0 的端口，都会暴露出来 无法被更新    targetPort：在 pod 上，从 port 和 nodePort 上来的流量，经过 kube-proxy 流入到后端 pod 的 targetPort 上，最后进入容器  targetPort 和 containerPort 是一致的  targetPort and containerPort must be identical most of the time because whatever port is open for your application in a container that would be the same port you will wish to send traffic from service via targetPort.</description>
    </item>
    
    <item>
      <title>Cloud Native</title>
      <link>https://ikingye.github.io/interview/docs/cloud/native/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/interview/docs/cloud/native/</guid>
      <description>Cloud Native #  </description>
    </item>
    
  </channel>
</rss>
